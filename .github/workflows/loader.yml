name: loader

on:
  push:
    paths:
      - "loader/**"
      - "logger/**"
      - "analyzer/**"

jobs:
  lint:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: |
          python -m pip install --upgrade pip
          pip install flake8
      - run: |
          flake8 loader --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 loader --count --max-complexity=10 --max-line-length=100 --statistics

  build:
    needs: lint
    runs-on: ubuntu-18.04

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    outputs:
      tags: ${{ steps.metadata.outputs.tags }}
      local_tag: ${{ steps.metadata.outputs.local_tag }}

    steps:
      - id: metadata
        run: |
          IMAGE=arkhn/river-loader
          # Always tag with first 8 of sha
          TAGS="${IMAGE}:${GITHUB_SHA::8}"
          LOCAL_TAG="localhost:5000/${IMAGE}:${GITHUB_SHA::8}"

          # Has this workflow been triggered by a tag ?
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}

            # Is the tag on master and does it follow numeric versioning ?
            if [[ "${{ github.event.base_ref }}" == refs/heads/master ]] && [[ "${VERSION}" =~ ^v[0-9]{1,3}(\.[0-9]{1,3}(\.[0-9]{1,3})?)?$ ]]; then
              TAGS="${TAGS},${IMAGE}:latest"
            fi

          # Has this workflow been triggered by a branch ?
          elif [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi

          if [[ ! -z "${VERSION}" ]]; then
            TAGS="${TAGS},${IMAGE}:${VERSION}"
          fi

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=local_tag::${LOCAL_TAG}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/build-push-action@v2
        with:
          file: ./loader/Dockerfile
          build-args: |
            VERSION_NAME=${{ steps.metadata.outputs.version }}
            VERSION_SHA=${GITHUB_SHA::8}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.metadata.outputs.local_tag }}
          labels: |
            com.arkhn.image.title=loader
            com.arkhn.image.description=${{ github.event.repository.description }}
            com.arkhn.image.url=${{ github.event.repository.html_url }}
            com.arkhn.image.source=${{ github.event.repository.clone_url }}
            com.arkhn.image.version=${{ steps.metadata.outputs.version }}
            com.arkhn.image.created=${{ steps.metadata.outputs.created }}
            com.arkhn.image.revision=${{ github.sha }}
            com.arkhn.image.licenses=${{ github.event.repository.license.spdx_id }}

  tests:
    needs: build
    runs-on: ubuntu-18.04

    # TODO(vmttn): Run tests in previously built container instead
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - run: |
          python -m pytest -svv loader/test analyzer/test
        env:
          PYROG_API_URL: http://test.com

  publish:
    needs: [tests, build]
    runs-on: ubuntu-18.04

    steps:
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: |
          TAGS=${{ needs.build.outputs.tags }}

          docker pull ${{ needs.build.outputs.local_tag }}

          for tag in ${TAGS//,/ }; do
            docker tag ${{ needs.build.outputs.local_tag }} "${tag}"
            docker push "${tag}"
          done
