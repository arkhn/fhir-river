name: loader

on:
  push:
    paths:
      - "loader/**"

jobs:
  lint:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: |
          python -m pip install --upgrade pip
          pip install flake8
      - run: |
          flake8 loader --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 loader --count --max-complexity=10 --max-line-length=100 --statistics

  build:
    needs: lint
    runs-on: ubuntu-18.04

    outputs:
      tags: ${{ steps.metadata.outputs.tags }}

    steps:
      - id: metadata
        run: |
          IMAGE=arkhn/river-loader
          # Always tag with first 8 of sha
          TAGS="${IMAGE}:${GITHUB_SHA::8}"

          # Has this workflow been triggered by a tag ?
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}

            # Is the tag on master and does it follow numeric versioning ?
            if [[ "${{ github.event.base_ref }}" == refs/heads/master ]] && [[ "${VERSION}" =~ ^v[0-9]{1,3}(\.[0-9]{1,3}(\.[0-9]{1,3})?)?$ ]]; then
              TAGS="${TAGS},${IMAGE}:latest"
            fi

          # Has this workflow been triggered by a branch ?
          elif [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi

          if [[ ! -z "${VERSION}" ]]; then
            TAGS="${TAGS},${IMAGE}:${VERSION}"
          fi

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          context: loader
          file: ./loader/Dockerfile
          build-args: |
            VERSION_NAME=${{ steps.metadata.outputs.version }}
            VERSION_SHA=${GITHUB_SHA::8}
          platforms: linux/amd64
          outputs: type=tar,dest=loader.tar
          tags: ${{ steps.metadata.outputs.tags }}
          labels: |
            com.arkhn.image.title=loader
            com.arkhn.image.description=${{ github.event.repository.description }}
            com.arkhn.image.url=${{ github.event.repository.html_url }}
            com.arkhn.image.source=${{ github.event.repository.clone_url }}
            com.arkhn.image.version=${{ steps.metadata.outputs.version }}
            com.arkhn.image.created=${{ steps.metadata.outputs.created }}
            com.arkhn.image.revision=${{ github.sha }}
            com.arkhn.image.licenses=${{ github.event.repository.license.spdx_id }}
      - uses: actions/upload-artifact@v2
        with:
          name: image.tar
          path: image.tar

  tests:
    needs: build
    runs-on: ubuntu-18.04

    # TODO(vmttn): Run tests in previously built container instead
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - run: |
          python -m pytest -svv extractor/test transformer/test loader/test analyzer/test
        env:
          PYROG_API_URL: http://test.com

  e2e:
    needs: build
    runs-on: ubuntu-18.04

    # TODO(vmttn): Run tests with previously built container instead
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.7

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install postgresql libpq-dev
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Integration tests with pytest
        env:
          PYROG_API_URL: http://0.0.0.0:1000
          KAFKA_BOOTSTRAP_SERVERS_EXTERNAL: "0.0.0.0:9092"
          FHIRSTORE_HOST: localhost
          FHIRSTORE_PORT: 27017
          FHIRSTORE_DATABASE: fhirstore
          FHIRSTORE_USER: arkhn
          FHIRSTORE_PASSWORD: SuperSecurePassword2019
          ENV: test
        run: |
          docker-compose -f test/docker-compose.yml up -d mongo mimic elasticsearch monstache kafka zookeeper
          sleep 15
          MONGO_USERNAME=arkhn MONGO_PASSWORD=SuperSecurePassword2019 ./test/initiate_rep_set.sh
          docker-compose -f test/docker-compose.yml up -d fhir-api
          sleep 15
          docker exec fhir-api python3 scripts/upload_bundles.py fhir_bundles/resources.json fhir_bundles/conceptMaps.json
          docker-compose -f test/docker-compose.yml up -d postgres redis pyrog-server
          sleep 30
          docker exec pyrog-server yarn seed:mapping /app/mapping.json /app/credentials.json
          docker-compose -f test/docker-compose.yml up -d --build api extractor transformer loader
          sleep 15
          python -m pytest -svv test

  publish:
    needs: [tests, e2e, build]
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: image.tar
          path: image.tar
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: |
          docker load -i image.tar
          echo ${{ needs.build.outputs.tags }} | xargs -n 1 docker push
