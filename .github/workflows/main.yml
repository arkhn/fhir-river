name: main

on:
  push:
    paths-ignore:
      - 'app/**'
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    paths-ignore:
      - 'app/**'

jobs:
  build-and-publish:
    runs-on: ubuntu-18.04
    steps:
      - id: docker_meta
        name: Docker Metadata action
        uses: docker/metadata-action@v3.3.0
        with:
          images: arkhn/river
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=sha
        # compute tags:
        # - always tag with a short commit SHA : (arkhn/image:sha-${GITHUB_SHA::7})
        # - always tag with the branch same (replacing '/' with '-')
        # - when a tag follows semver (eg: v1.2.3), tag with 'latest' and '1.2.3'
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          build-args: |
            VERSION_NAME=${{ steps.docker_meta.outputs.version }}
            VERSION_SHA=${GITHUB_SHA::8}
          platforms: linux/amd64
          # always push images to the hub
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  unit-tests:
    runs-on: ubuntu-18.04
    needs: [build-and-publish]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: docker/login-action@v1
        name: login to arkhn registry
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - id: docker-tag
        run: echo "::set-output name=river-version::sha-${GITHUB_SHA::7}"
      - id: tests
        env:
          IMAGE_TAG: ${{ steps.docker-tag.outputs.river-version }}
          TEST_ORACLE_HOST: ${{ secrets.TEST_ORACLE_HOST }}
          TEST_ORACLE_PORT: ${{ secrets.TEST_ORACLE_PORT }}
          TEST_ORACLE_DB: ${{ secrets.TEST_ORACLE_DB }}
          TEST_ORACLE_LOGIN: ${{ secrets.TEST_ORACLE_LOGIN }}
          TEST_ORACLE_PASSWORD: ${{ secrets.TEST_ORACLE_PASSWORD }}
          TEST_MSSQL_HOST: ${{ secrets.TEST_MSSQL_HOST }}
          TEST_MSSQL_PORT: ${{ secrets.TEST_MSSQL_PORT }}
          TEST_MSSQL_DB: ${{ secrets.TEST_MSSQL_DB }}
          TEST_MSSQL_LOGIN: ${{ secrets.TEST_MSSQL_LOGIN }}
          TEST_MSSQL_PASSWORD: ${{ secrets.TEST_MSSQL_PASSWORD }}
        run: |
          docker-compose -f ./docker-compose.test.yml up -d
          docker-compose -f ./docker-compose.test.yml exec -T river pytest -vv -m "not django_db"

  test-hapi:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '15'
      # runs the Maven `package` target in non-interactive mode to ensure
      # that the code builds, tests pass, and a package can be created.
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
        working-directory: hapi-loader

  build-and-publish-hapi:
    runs-on: ubuntu-18.04
    steps:
      - id: docker_meta
        name: Docker Metadata action
        uses: docker/metadata-action@v3.3.0
        with:
          images: arkhn/hapi-river
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=sha
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          context: hapi-loader
          file: ./hapi-loader/Dockerfile
          build-args: |
            VERSION_NAME=${{ steps.docker_meta.outputs.version }}
            VERSION_SHA=${GITHUB_SHA::8}
          platforms: linux/amd64
          # always push images to the hub
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  integration:
    runs-on: ubuntu-18.04
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.draft == false }}
    needs: [unit-tests, build-and-publish-hapi]
    steps:
      # FIXME(simonvadee): find a better way to compute the docker tag for fhir-river images:
      # crazy-max/ghaction-docker-meta@v1 always tag the image with sha-{first-7-SHA-characters}
      # however we cannot use ${{ jobs.build-and-publish.steps.docker_meta.tags }} because it's
      # a string like: "arkhn/river-loader:sha-d1e2a3d,arkhn/river-loader:1.2.3"
      - id: docker-tag
        run: echo "::set-output name=docker-version::sha-${GITHUB_SHA::7}"

      - name: Provision, deploy and test
        # uses: docker://arkhn/testy-action:0.5.7
        uses: arkhn/testy-action@sv/missing-deployment-vars
        with:
          cloudToken: ${{ secrets.TESTY_CLOUD_TOKEN }}
          cloudProjectId: ${{ secrets.TESTY_CLOUD_PROJECT_ID }}
          cloudKey: ${{ secrets.TESTY_CLOUD_KEY }}
          contextName: river-ci-${{ github.sha }}
          dockerUsername: ${{ secrets.DOCKER_LOGIN }}
          dockerPassword: ${{ secrets.DOCKER_PASSWORD }}
          deploymentToken: ${{ secrets.GIT_USER_KEY }}
          deploymentRef: sv/stop-pulling-testy
          debug: true
          versions: |
            {
              "fhir_river": "${{ steps.docker-tag.outputs.docker-version }}",
              "hapi_loader": "${{ steps.docker-tag.outputs.docker-version }}"
            }
