name: fhir-river

on: [push]

jobs:
  unit-tests:
    name: Lint and test
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install postgresql libpq-dev
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 analyzer extractor transformer loader api --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 analyzer extractor transformer loader api --count --max-complexity=10 --max-line-length=100 --statistics

      - name: Test with pytest
        env:
          PYROG_API_URL: http://test.com
        run: |
          python -m pytest -svv extractor/test transformer/test loader/test analyzer/test

  docker-build:
    name: Build docker images
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1

      - name: Cache docker images
        id: cache-docker-images
        uses: actions/cache@v1
        with:
          path: .docker_cache/
          key: ${{ runner.OS }}-river-docker-images-${{ github.sha }}
          restore-keys: |
            ${{ runner.OS }}-river-docker-images-

      - name: Create .docker_cache directory
        run: mkdir .docker_cache || echo ".docker_cache exists, skipping..."

      - name: Load cached docker images
        run: |
          docker load -i .docker_cache/river-api.tar.gz || echo "Cached image not found, skipping"
          docker load -i .docker_cache/river-extractor.tar.gz || echo "Cached image not found, skipping"
          docker load -i .docker_cache/river-transformer.tar.gz || echo "Cached image not found, skipping"
          docker load -i .docker_cache/river-loader.tar.gz || echo "Cached image not found, skipping"

      - name: Build images
        run: |
          docker build -f api/Dockerfile -t arkhn/river-api .
          docker build -f extractor/Dockerfile -t arkhn/river-extractor .
          docker build -f transformer/Dockerfile -t arkhn/river-transformer .
          docker build -f loader/Dockerfile -t arkhn/river-loader .

      - name: Save docker images for caching
        run: |
          docker save arkhn/river-api:latest $(docker history -q arkhn/river-api:latest | grep -v missing) -o .docker_cache/river-api.tar.gz
          docker save arkhn/river-extractor:latest $(docker history -q arkhn/river-extractor:latest | grep -v missing) -o .docker_cache/river-extractor.tar.gz
          docker save arkhn/river-transformer:latest $(docker history -q arkhn/river-transformer:latest | grep -v missing) -o .docker_cache/river-transformer.tar.gz
          docker save arkhn/river-loader:latest $(docker history -q arkhn/river-loader:latest | grep -v missing) -o .docker_cache/river-loader.tar.gz

  integration-tests:
    name: Run integration tests
    runs-on: ubuntu-18.04
    needs: docker-build
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"

      - name: Retrieved cached docker images
        id: cache-docker-images
        uses: actions/cache@v1
        with:
          path: .docker_cache/
          key: ${{ runner.OS }}-river-docker-images-${{ github.sha }}

      - name: Load cached docker images
        run: |
          docker load -i .docker_cache/river-api.tar.gz
          docker load -i .docker_cache/river-extractor.tar.gz
          docker load -i .docker_cache/river-transformer.tar.gz
          docker load -i .docker_cache/river-loader.tar.gz

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install postgresql libpq-dev
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Integration tests with pytest
        env:
          FHIR_API_URL: ${{ secrets.FHIR_API_URL }}
          PYROG_API_URL: ${{ secrets.PYROG_API_URL }}
          PYROG_LOGIN: ${{ secrets.PYROG_LOGIN }}
          PYROG_PASSWORD: ${{ secrets.PYROG_PASSWORD }}
          MIMIC_PRACTITIONER_RESOURCE_ID: ${{ secrets.MIMIC_PRACTITIONER_RESOURCE_ID }}
          MIMIC_PATIENT_RESOURCE_ID: ${{ secrets.MIMIC_PATIENT_RESOURCE_ID }}
          KAFKA_BOOTSTRAP_SERVERS: ${{ secrets.KAFKA_BOOTSTRAP_SERVERS }}
        run: |
          docker-compose -f test/docker-compose.yml up -d mongo mimic
          sleep 10
          MONGO_USERNAME=arkhn MONGO_PASSWORD=SuperSecurePassword2019 ./test/initiate_rep_set.sh
          docker-compose -f test/docker-compose.yml up -d transformer
          sleep 30
          docker-compose -f test/docker-compose.yml up -d
          sleep 10
          python -m pytest -svv test/test_batch.py

  publish:
    name: Publish docker images
    runs-on: ubuntu-18.04

    needs:
      - integration-tests
      - docker-build
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v1

      - name: Retrieved cached docker images
        id: cache-docker-images
        uses: actions/cache@v1
        with:
          path: .docker_cache/
          key: ${{ runner.OS }}-river-docker-images-${{ github.sha }}

      - name: Load cached docker images
        run: |
          docker load -i .docker_cache/river-api.tar.gz
          docker load -i .docker_cache/river-extractor.tar.gz
          docker load -i .docker_cache/river-transformer.tar.gz
          docker load -i .docker_cache/river-loader.tar.gz

      - name: Tag images
        run: |
          docker tag arkhn/river-api arkhn/river-api:$GITHUB_SHA
          docker tag arkhn/river-extractor arkhn/river-extractor:$GITHUB_SHA
          docker tag arkhn/river-transformer arkhn/river-transformer:$GITHUB_SHA
          docker tag arkhn/river-loader arkhn/river-loader:$GITHUB_SHA

      - name: Publish to the docker hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" |  docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
          docker push arkhn/river-api:latest
          docker push arkhn/river-api:$GITHUB_SHA
          docker push arkhn/river-extractor:latest
          docker push arkhn/river-extractor:$GITHUB_SHA
          docker push arkhn/river-transformer:latest
          docker push arkhn/river-transformer:$GITHUB_SHA
          docker push arkhn/river-loader:latest
          docker push arkhn/river-loader:$GITHUB_SHA
