name: fhir-river

on: [push]

jobs:
  unit-tests:
    name: Lint and test
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.7

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install postgresql libpq-dev
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 analyzer extractor transformer loader api --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 analyzer extractor transformer loader api --count --max-complexity=10 --max-line-length=100 --statistics

      - name: Test with pytest
        env:
          PYROG_API_URL: http://test.com
        run: |
          python -m pytest -svv extractor/test transformer/test loader/test analyzer/test

  docker-build:
    name: Build docker images
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1

      - name: Build images
        run: |
          docker build -f apigo/Dockerfile -t arkhn/river-api-go:$GITHUB_SHA apigo
          docker build -f extractor/Dockerfile -t arkhn/river-extractor:$GITHUB_SHA .
          docker build -f transformer/Dockerfile -t arkhn/river-transformer:$GITHUB_SHA .
          docker build -f loader/Dockerfile -t arkhn/river-loader:$GITHUB_SHA .

      - name: Push docker images for caching
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" |  docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
          docker push arkhn/river-api-go:$GITHUB_SHA
          docker push arkhn/river-extractor:$GITHUB_SHA
          docker push arkhn/river-transformer:$GITHUB_SHA
          docker push arkhn/river-loader:$GITHUB_SHA

  integration-tests:
    name: Run integration tests
    runs-on: ubuntu-18.04
    needs: docker-build
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.7

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install postgresql libpq-dev
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Pull docker images
        run: |
          docker pull arkhn/river-api-go:$GITHUB_SHA
          docker pull arkhn/river-extractor:$GITHUB_SHA
          docker pull arkhn/river-transformer:$GITHUB_SHA
          docker pull arkhn/river-loader:$GITHUB_SHA
          docker-compose -f test/docker-compose.yml pull mimic mongo elasticsearch monstache zookeeper kafka

      - name: Tag images
        run: |
          docker tag arkhn/river-api-go:$GITHUB_SHA arkhn/river-api:latest
          docker tag arkhn/river-extractor:$GITHUB_SHA arkhn/river-extractor:latest
          docker tag arkhn/river-transformer:$GITHUB_SHA arkhn/river-transformer:latest
          docker tag arkhn/river-loader:$GITHUB_SHA arkhn/river-loader:latest

      - name: Integration tests with pytest
        env:
          PYROG_API_URL: http://pyrog:1000
          FHIR_API_URL: http://fhir-api:2000
          FHIR_API_TOKEN: ${{ secrets.FHIR_API_TOKEN }}
          PYROG_LOGIN: admin@arkhn.com
          PYROG_PASSWORD: password
          MONGO_DB_USERNAME: arkhn
          MONGO_DB_NAME: fhirstore
          MONGO_DB_PORT: 27017
          MONGO_DB_PASSWORD: SuperSecurePassword2019
          ES_HOST: elasticsearch
          ES_PORT: 9200
          ES_USER: elastic
          ES_PASSWORD: SuperSecurePassword2019
          MIMIC_DB_PASSWORD: mimicpass
          MIMIC_PRACTITIONER_RESOURCE_ID: ckbjjts9k008758pwuo4uupux
          MIMIC_PATIENT_RESOURCE_ID: ck8oo3on226974kp4ns32n7xs
          KAFKA_BOOTSTRAP_SERVERS: "localhost:9092"
        run: |
          docker-compose -f test/docker-compose.yml up -d mongo mimic elasticsearch monstache
          docker-compose -f test/docker-compose.yml up -d kafka zookeeper
          docker-compose -f test/docker-compose.yml up -d fhir-api
          sleep 5
          MONGO_USERNAME=arkhn MONGO_PASSWORD=SuperSecurePassword2019 ./test/initiate_rep_set.sh
          docker exec fhir-api python3 scripts/upload_bundles.py fhir_bundles/resources.json /app/conceptMaps.json
          docker restart fhir-api
          docker-compose -f test/docker-compose.yml up -d postgres redis pyrog-server
          sleep 30
          docker exec --env SUPERUSER_PASSWORD="password" pyrog-server yarn seed:superuser
          docker exec pyrog-server yarn seed:mapping /app/mapping.json
          docker exec pyrog-server yarn seed:credentials /app/credentials.json
          docker-compose -f test/docker-compose.yml up -d api extractor transformer loader
          sleep 5
          python -m pytest -svv test/test_batch.py

  publish:
    name: Publish docker images
    runs-on: ubuntu-18.04

    needs:
      - integration-tests
      - docker-build
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v1

      - name: Pull docker images
        run: |
          docker pull arkhn/river-api-go:$GITHUB_SHA
          docker pull arkhn/river-extractor:$GITHUB_SHA
          docker pull arkhn/river-transformer:$GITHUB_SHA
          docker pull arkhn/river-loader:$GITHUB_SHA

      - name: Tag images
        run: |
          docker tag arkhn/river-api-go:$GITHUB_SHA arkhn/river-api-go:latest
          docker tag arkhn/river-extractor:$GITHUB_SHA arkhn/river-extractor:latest
          docker tag arkhn/river-transformer:$GITHUB_SHA arkhn/river-transformer:latest
          docker tag arkhn/river-loader:$GITHUB_SHA arkhn/river-loader:latest

      - name: Publish the latest tag to the docker hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" |  docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
          docker push arkhn/river-api-go:latest
          docker push arkhn/river-extractor:latest
          docker push arkhn/river-transformer:latest
          docker push arkhn/river-loader:latest
