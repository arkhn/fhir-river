# Generated by Django 3.1.12 on 2021-09-09 09:28

from django.db import migrations, models


def forwards_func(apps, schema_editor):
    Condition = apps.get_model("pyrog", "Condition")
    Filter = apps.get_model("pyrog", "Filter")
    SQLInput = apps.get_model("pyrog", "SQLInput")
    for condition in Condition.objects.all():
        condition.sql_input = SQLInput.objects.create(column=condition.column)
        condition.save()
    for filter in Filter.objects.all():
        filter.sql_input = SQLInput.objects.create(column=filter.sql_column)
        filter.save()


def reverse_func(apps, schema_editor):
    Condition = apps.get_model("pyrog", "Condition")
    Filter = apps.get_model("pyrog", "Filter")
    SQLInput = apps.get_model("pyrog", "SQLInput")

    for condition in Condition.objects.all():
        sql_input = SQLInput.objects.get(id=condition.sql_input.id)
        condition.column = sql_input.column
        condition.sql_input = None
        sql_input.delete()
        condition.save()
    for filter in Filter.objects.all():
        sql_input = SQLInput.objects.get(id=filter.sql_input.id)
        filter.sql_column = sql_input.column
        filter.sql_input = None
        sql_input.delete()
        filter.save()


class Migration(migrations.Migration):

    dependencies = [
        ("pyrog", "0012_drop_input"),
    ]

    # In this migration, we add a non-nullable field.
    # Because django runs migrations in a single transaction, we need
    # to make constraints deferrable as we migrate the data along with the database
    # schema in the same migration.
    # https://stackoverflow.com/questions/12838111/django-db-migrations-cannot-alter-table-because-it-has-pending-trigger-events

    operations = [
        migrations.RunSQL(sql="SET CONSTRAINTS ALL IMMEDIATE;", reverse_sql="SET CONSTRAINTS ALL DEFERRED;"),
        # condition.column needs to be nullable if we want to reverse this change
        migrations.AlterField(
            model_name="condition",
            name="column",
            field=models.OneToOneField(null=True, blank=True, on_delete=models.deletion.CASCADE, to="pyrog.column"),
        ),
        # filter.sql_column needs to be nullable if we want to reverse this change
        migrations.AlterField(
            model_name="filter",
            name="sql_column",
            field=models.OneToOneField(null=True, blank=True, on_delete=models.deletion.CASCADE, to="pyrog.column"),
        ),
        migrations.AlterField(
            model_name="sqlinput",
            name="input_group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=models.deletion.CASCADE,
                related_name="sql_inputs",
                to="pyrog.inputgroup",
            ),
        ),
        migrations.AddField(
            model_name="condition",
            name="sql_input",
            field=models.OneToOneField(
                default=None, null=True, on_delete=models.deletion.CASCADE, to="pyrog.sqlinput"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="filter",
            name="sql_input",
            field=models.OneToOneField(
                default=None, null=True, on_delete=models.deletion.CASCADE, to="pyrog.sqlinput"
            ),
            preserve_default=False,
        ),
        migrations.RunPython(forwards_func, reverse_func),
        migrations.AlterField(
            model_name="condition",
            name="sql_input",
            field=models.OneToOneField(null=False, on_delete=models.deletion.CASCADE, to="pyrog.sqlinput"),
        ),
        migrations.AlterField(
            model_name="filter",
            name="sql_input",
            field=models.OneToOneField(null=False, on_delete=models.deletion.CASCADE, to="pyrog.sqlinput"),
        ),
        migrations.RemoveField(
            model_name="condition",
            name="column",
        ),
        migrations.RemoveField(
            model_name="filter",
            name="sql_column",
        ),
        migrations.RunSQL(sql="SET CONSTRAINTS ALL DEFERRED;", reverse_sql="SET CONSTRAINTS ALL IMMEDIATE;"),
    ]
