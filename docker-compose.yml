version: "3.7"

services:
  extractor:
    image: river
    build: .
    command: extractor
    depends_on:
      - kafka
    restart: on-failure
    environment:
      - ENV=dev
      - LOG_LEVEL=DEBUG
      - REDIS_MAPPINGS_HOST=river-redis
      - REDIS_MAPPINGS_PORT=6379
      - REDIS_MAPPINGS_DB=1
      - REDIS_COUNTER_HOST=river-redis
      - REDIS_COUNTER_PORT=6379
      - REDIS_COUNTER_DB=2

  transformer:
    image: river
    build: .
    command: transformer
    depends_on:
      - kafka
    restart: on-failure
    environment:
      - ENV=dev
      - LOG_LEVEL=DEBUG
      - REDIS_MAPPINGS_HOST=river-redis
      - REDIS_MAPPINGS_PORT=6379
      - REDIS_MAPPINGS_DB=1

  loader:
    image: river
    build: .
    command: loader
    depends_on:
      - kafka
    restart: on-failure
    environment:
      - ENV=dev
      - LOG_LEVEL=DEBUG
      - FHIRSTORE_USER=arkhn
      - FHIRSTORE_PASSWORD=5gBwjTYR4DHSbzaUwVNX43DbTn
      - REDIS_REFERENCES_HOST=river-redis
      - REDIS_REFERENCES_PORT=6379
      - REDIS_REFERENCES_DB=0
      - REDIS_MAPPINGS_HOST=river-redis
      - REDIS_MAPPINGS_PORT=6379
      - REDIS_MAPPINGS_DB=1
      - REDIS_COUNTER_HOST=river-redis
      - REDIS_COUNTER_PORT=6379
      - REDIS_COUNTER_DB=2

  control-api:
    image: river
    build: .
    restart: on-failure
    environment:
      - ENV=dev
      - LOG_LEVEL=DEBUG
      - SECRET_KEY=whatever

  api:
    build: api
    restart: on-failure
    depends_on:
      - kafka
    environment:
      - PORT=3000
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CONTROL_API_URL=http://control-api:8000
      - PYROG_API_URL=http://pyrog-server:1000
      - FHIR_API_URL=http://fhir-api:2000
      - REDIS_MAPPINGS_HOST=river-redis
      - REDIS_MAPPINGS_PORT=6379
      - REDIS_MAPPINGS_DB=1
      - REDIS_COUNTER_HOST=river-redis
      - REDIS_COUNTER_PORT=6379
      - REDIS_COUNTER_DB=2

  zookeeper:
    image: zookeeper:3.4.10
    restart: on-failure

  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    restart: on-failure
    # This port mapping is required by the containerized kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      # - KAFKA_HEAP_OPTS=-Xmx256M -Xms128M
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9993 -Dcom.sun.management.jmxremote.port=9993
      - JMX_PORT=9993
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  river-redis:
    image: redis:6.0.7
    restart: on-failure
    command: --loglevel verbose

networks:
  default:
    external:
      name: arkhn_network
