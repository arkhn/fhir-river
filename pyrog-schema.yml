openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/attributes/:
    get:
      operationId: api_attributes_list
      description: ''
      parameters:
      - in: query
        name: source
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute'
          description: ''
    post:
      operationId: api_attributes_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
  /api/attributes/{id}/:
    get:
      operationId: api_attributes_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this attribute.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
    put:
      operationId: api_attributes_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this attribute.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
    patch:
      operationId: api_attributes_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this attribute.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttributeRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
    delete:
      operationId: api_attributes_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this attribute.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/columns/:
    get:
      operationId: api_columns_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Column'
          description: ''
    post:
      operationId: api_columns_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: ''
  /api/columns/{id}/:
    get:
      operationId: api_columns_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this column.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: ''
    put:
      operationId: api_columns_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this column.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: ''
    patch:
      operationId: api_columns_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this column.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedColumnRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: ''
    delete:
      operationId: api_columns_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this column.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/conditions/:
    get:
      operationId: api_conditions_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
          description: ''
    post:
      operationId: api_conditions_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
  /api/conditions/{id}/:
    get:
      operationId: api_conditions_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this condition.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
    put:
      operationId: api_conditions_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this condition.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
    patch:
      operationId: api_conditions_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this condition.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConditionRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
    delete:
      operationId: api_conditions_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this condition.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/credentials/:
    get:
      operationId: api_credentials_list
      description: ''
      parameters:
      - in: query
        name: source
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Credential'
          description: ''
    post:
      operationId: api_credentials_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
          description: ''
  /api/credentials/{id}/:
    get:
      operationId: api_credentials_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this credential.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
          description: ''
    put:
      operationId: api_credentials_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this credential.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
          description: ''
    patch:
      operationId: api_credentials_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this credential.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCredentialRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
          description: ''
    delete:
      operationId: api_credentials_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this credential.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/filters/:
    get:
      operationId: api_filters_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Filter'
          description: ''
    post:
      operationId: api_filters_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
          description: ''
  /api/filters/{id}/:
    get:
      operationId: api_filters_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this filter.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
          description: ''
    put:
      operationId: api_filters_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this filter.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
          description: ''
    patch:
      operationId: api_filters_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this filter.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFilterRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
          description: ''
    delete:
      operationId: api_filters_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this filter.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/input-groups/:
    get:
      operationId: api_input_groups_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InputGroup'
          description: ''
    post:
      operationId: api_input_groups_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputGroupRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputGroup'
          description: ''
  /api/input-groups/{id}/:
    get:
      operationId: api_input_groups_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this input group.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputGroup'
          description: ''
    put:
      operationId: api_input_groups_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this input group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputGroupRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputGroup'
          description: ''
    patch:
      operationId: api_input_groups_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this input group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInputGroupRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputGroup'
          description: ''
    delete:
      operationId: api_input_groups_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this input group.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/inputs/:
    get:
      operationId: api_inputs_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Input'
          description: ''
    post:
      operationId: api_inputs_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/inputs/{id}/:
    get:
      operationId: api_inputs_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this input.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
    put:
      operationId: api_inputs_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this input.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
    patch:
      operationId: api_inputs_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this input.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInputRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
    delete:
      operationId: api_inputs_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this input.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/joins/:
    get:
      operationId: api_joins_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Join'
          description: ''
    post:
      operationId: api_joins_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Join'
          description: ''
  /api/joins/{id}/:
    get:
      operationId: api_joins_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this join.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Join'
          description: ''
    put:
      operationId: api_joins_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this join.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Join'
          description: ''
    patch:
      operationId: api_joins_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this join.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJoinRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Join'
          description: ''
    delete:
      operationId: api_joins_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this join.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/owners/:
    get:
      operationId: api_owners_list
      description: ''
      parameters:
      - in: query
        name: credential
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Owner'
          description: ''
    post:
      operationId: api_owners_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
          description: ''
  /api/owners/{id}/:
    delete:
      operationId: api_owners_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this owner.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/resources/:
    get:
      operationId: api_resources_list
      description: ''
      parameters:
      - in: query
        name: source
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
          description: ''
    post:
      operationId: api_resources_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
  /api/resources/{id}/:
    get:
      operationId: api_resources_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this resource.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
    put:
      operationId: api_resources_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this resource.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
    patch:
      operationId: api_resources_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this resource.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResourceRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
    delete:
      operationId: api_resources_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this resource.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/sources/:
    get:
      operationId: api_sources_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'
          description: ''
    post:
      operationId: api_sources_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
  /api/sources/{id}/:
    get:
      operationId: api_sources_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this source.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
    put:
      operationId: api_sources_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this source.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
    patch:
      operationId: api_sources_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this source.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSourceRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
    delete:
      operationId: api_sources_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this source.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    ActionEnum:
      enum:
      - INCLUDE
      - EXCLUDE
      type: string
    Attribute:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        path:
          type: string
        sliceName:
          type: string
        definitionId:
          type: string
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        resource:
          type: string
      required:
      - createdAt
      - definitionId
      - id
      - path
      - resource
      - updatedAt
    AttributeRequest:
      type: object
      properties:
        path:
          type: string
        sliceName:
          type: string
        definitionId:
          type: string
        resource:
          type: string
      required:
      - definitionId
      - path
      - resource
    Column:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        table:
          type: string
        column:
          type: string
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        join:
          type: string
          nullable: true
        input:
          type: string
          nullable: true
        owner:
          type: string
      required:
      - column
      - createdAt
      - id
      - owner
      - table
      - updatedAt
    ColumnRequest:
      type: object
      properties:
        table:
          type: string
        column:
          type: string
        join:
          type: string
          nullable: true
        input:
          type: string
          nullable: true
        owner:
          type: string
      required:
      - column
      - owner
      - table
    Condition:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        action:
          $ref: '#/components/schemas/ActionEnum'
        value:
          type: string
        relation:
          $ref: '#/components/schemas/ConditionRelationEnum'
        column:
          type: string
        inputGroup:
          type: string
      required:
      - action
      - column
      - id
      - inputGroup
    ConditionRelationEnum:
      enum:
      - EQ
      - GT
      - GE
      - LT
      - LE
      - NOTNULL
      - 'NULL'
      type: string
    ConditionRequest:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ActionEnum'
        value:
          type: string
        relation:
          $ref: '#/components/schemas/ConditionRelationEnum'
        column:
          type: string
        inputGroup:
          type: string
      required:
      - action
      - column
      - inputGroup
    Credential:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        availableOwners:
          type: array
          items:
            type: string
          readOnly: true
        host:
          type: string
        port:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        database:
          type: string
        login:
          type: string
        password:
          type: string
        model:
          $ref: '#/components/schemas/ModelEnum'
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        source:
          type: string
      required:
      - availableOwners
      - createdAt
      - database
      - host
      - id
      - login
      - model
      - password
      - port
      - source
      - updatedAt
    CredentialRequest:
      type: object
      properties:
        host:
          type: string
        port:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        database:
          type: string
        login:
          type: string
        password:
          type: string
        model:
          $ref: '#/components/schemas/ModelEnum'
        source:
          type: string
      required:
      - database
      - host
      - login
      - model
      - password
      - port
      - source
    Filter:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        relation:
          $ref: '#/components/schemas/FilterRelationEnum'
        value:
          type: string
        resource:
          type: string
        sqlColumn:
          type: string
      required:
      - id
      - relation
      - resource
      - sqlColumn
    FilterRelationEnum:
      enum:
      - '='
      - <>
      - IN
      - '>'
      - '>='
      - <
      - <=
      type: string
    FilterRequest:
      type: object
      properties:
        relation:
          $ref: '#/components/schemas/FilterRelationEnum'
        value:
          type: string
        resource:
          type: string
        sqlColumn:
          type: string
      required:
      - relation
      - resource
      - sqlColumn
    Input:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        script:
          type: string
        conceptMapId:
          type: string
        staticValue:
          type: string
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        inputGroup:
          type: string
      required:
      - createdAt
      - id
      - inputGroup
      - updatedAt
    InputGroup:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        mergingScript:
          type: string
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        attribute:
          type: string
      required:
      - attribute
      - createdAt
      - id
      - updatedAt
    InputGroupRequest:
      type: object
      properties:
        mergingScript:
          type: string
        attribute:
          type: string
      required:
      - attribute
    InputRequest:
      type: object
      properties:
        script:
          type: string
        conceptMapId:
          type: string
        staticValue:
          type: string
        inputGroup:
          type: string
      required:
      - inputGroup
    Join:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        column:
          type: string
      required:
      - column
      - createdAt
      - id
      - updatedAt
    JoinRequest:
      type: object
      properties:
        column:
          type: string
      required:
      - column
    ModelEnum:
      enum:
      - MSSQL
      - POSTGRES
      - ORACLE
      - SQLLITE
      type: string
    Owner:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
        credential:
          type: string
      required:
      - credential
      - id
      - name
      - schema
    OwnerRequest:
      type: object
      properties:
        name:
          type: string
        credential:
          type: string
      required:
      - credential
      - name
    PatchedAttributeRequest:
      type: object
      properties:
        path:
          type: string
        sliceName:
          type: string
        definitionId:
          type: string
        resource:
          type: string
    PatchedColumnRequest:
      type: object
      properties:
        table:
          type: string
        column:
          type: string
        join:
          type: string
          nullable: true
        input:
          type: string
          nullable: true
        owner:
          type: string
    PatchedConditionRequest:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ActionEnum'
        value:
          type: string
        relation:
          $ref: '#/components/schemas/ConditionRelationEnum'
        column:
          type: string
        inputGroup:
          type: string
    PatchedCredentialRequest:
      type: object
      properties:
        host:
          type: string
        port:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        database:
          type: string
        login:
          type: string
        password:
          type: string
        model:
          $ref: '#/components/schemas/ModelEnum'
        source:
          type: string
    PatchedFilterRequest:
      type: object
      properties:
        relation:
          $ref: '#/components/schemas/FilterRelationEnum'
        value:
          type: string
        resource:
          type: string
        sqlColumn:
          type: string
    PatchedInputGroupRequest:
      type: object
      properties:
        mergingScript:
          type: string
        attribute:
          type: string
    PatchedInputRequest:
      type: object
      properties:
        script:
          type: string
        conceptMapId:
          type: string
        staticValue:
          type: string
        inputGroup:
          type: string
    PatchedJoinRequest:
      type: object
      properties:
        column:
          type: string
    PatchedResourceRequest:
      type: object
      properties:
        label:
          type: string
        primaryKeyTable:
          type: string
        primaryKeyColumn:
          type: string
        definitionId:
          type: string
        logicalReference:
          type: string
        source:
          type: string
        primaryKeyOwner:
          type: string
    PatchedSourceRequest:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
    Resource:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        label:
          type: string
        primaryKeyTable:
          type: string
        primaryKeyColumn:
          type: string
        definitionId:
          type: string
        logicalReference:
          type: string
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        source:
          type: string
        primaryKeyOwner:
          type: string
      required:
      - createdAt
      - definitionId
      - id
      - logicalReference
      - primaryKeyColumn
      - primaryKeyOwner
      - primaryKeyTable
      - source
      - updatedAt
    ResourceRequest:
      type: object
      properties:
        label:
          type: string
        primaryKeyTable:
          type: string
        primaryKeyColumn:
          type: string
        definitionId:
          type: string
        logicalReference:
          type: string
        source:
          type: string
        primaryKeyOwner:
          type: string
      required:
      - definitionId
      - logicalReference
      - primaryKeyColumn
      - primaryKeyOwner
      - primaryKeyTable
      - source
    Source:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        version:
          type: string
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - createdAt
      - id
      - name
      - updatedAt
    SourceRequest:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
      required:
      - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
