version: "3.7"
services:
  mimic:
    image: arkhn/mimic:latest
    container_name: mimic
    restart: always
    environment:
      POSTGRES_USER: mimicuser
      POSTGRES_PASSWORD: mimicpass
      POSTGRES_DB: mimic
      POSTGRES_HOST: mimic
      POSTGRES_PORT: 5432
    volumes:
      - test-mimic-db:/var/lib/postgresql/data
    ports:
      - 5431:5432

  mongo:
    image: mongo
    hostname: mongo
    container_name: mongo
    restart: always
    command: --replSet rs0
    env_file:
      - ./.env.test
    ports:
      - 27017:27017
    volumes:
      - test-fhirstore-db:/data/db
      - test-fhirstore-config-db:/data/configdb

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
    container_name: elasticsearch
    env_file:
      - ./.env.test
    ports:
      - 9200:9200
    volumes:
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - test-elastic-db:/usr/share/elasticsearch/data

  monstache:
    image: arkhn/monstache:6.6.0
    container_name: monstache
    command: -f /opt/monstache.toml -mapper-plugin-path /lib/fhirstore_map_documents.so
    restart: always
    volumes:
      - ./monstache.toml:/opt/monstache.toml
    depends_on:
      - mongo
      - elasticsearch

  zookeeper:
    image: "zookeeper:3.4.10"
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    expose:
      - "2181"

  kafka:
    hostname: kafka
    image: "wurstmeister/kafka:0.10.2.1"
    restart: always
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  transformer:
    build:
      dockerfile: transformer/Dockerfile
      context: ../
    container_name: transformer
    image: arkhn/river-transformer:latest
    restart: always
    depends_on:
      - kafka
    env_file:
      - ./.env.test
    ports:
      - 3002

  loader:
    build:
      dockerfile: loader/Dockerfile
      context: ../
    container_name: loader
    image: arkhn/river-loader:latest
    restart: always
    depends_on:
      - kafka
      - mongo
      - loader-redis
    env_file:
      - ./.env.test

  loader-redis:
    image: redis:5.0.7-alpine
    container_name: loader-redis
    ports:
      - 6380:6379
    volumes:
      - loader-redis-data:/data

  extractor:
    build:
      dockerfile: extractor/Dockerfile
      context: ../
    container_name: extractor
    image: arkhn/river-extractor:latest
    restart: always
    depends_on:
      - kafka
    env_file:
      - ./.env.test
    ports:
      - 3001

  api:
    build:
      context: ../apigo
    container_name: api
    image: arkhn/river-api-go:latest
    restart: always
    depends_on:
      - kafka
    env_file:
      - ./.env.test
    environment:
      PORT: 3000
      EXTRACTOR_URL: http://extractor:3001
      TRANSFORMER_URL: http://transformer:3002
      LOADER_URL: http://loader:3003
    ports:
      - "3000:3000"

  pyrog-server:
    image: arkhn/pyrog-server:latest
    container_name: pyrog-server
    restart: always
    ports:
      - 1000:1000
    env_file:
      - ./.env.test
    environment:
      PORT: 1000
    volumes:
      - ./data/mapping.json:/app/mapping.json
      - ./data/credentials.json:/app/credentials.json
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:12
    container_name: postgres
    command: -p 55432
    ports:
      - 55432:55432
    env_file:
      - ./.env.test
    volumes:
      - test-postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:5.0.7-alpine
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  fhir-api:
    image: arkhn/fhir-api:v0.1.0
    depends_on:
      - elasticsearch
      - mongo
    environment:
      - MONGO_DB=fhirstore
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_USER=arkhn
      - MONGO_PASSWORD=SuperSecurePassword2019
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_USERNAME=elastic
      - EL_PASSWORD=SuperSecurePassword2019
      - AUTH_DISABLED=True
    volumes:
      - ./data/definitions:/var/data/definitions

volumes:
  test-mimic-db:
  test-fhirstore-db:
  test-fhirstore-config-db:
  test-elastic-db:
  test-postgres-data:
  kafka-config:
  redis-data:
  loader-redis-data:
