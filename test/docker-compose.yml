version: "3.7"
services:
  mimic:
    image: arkhn/mimic:latest
    container_name: mimic
    restart: always
    environment:
      POSTGRES_USER: mimicuser
      POSTGRES_PASSWORD: ${MIMIC_DB_PASSWORD}
      POSTGRES_DB: mimic
      POSTGRES_HOST: mimic
      POSTGRES_PORT: 5432
    volumes:
      - test-mimic-db:/var/lib/postgresql/data
    ports:
      - 5431:5432

  mongo:
    image: mongo
    hostname: mongo
    container_name: mongo
    restart: always
    command: --replSet rs0
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    ports:
      - ${MONGO_DB_PORT}:${MONGO_DB_PORT}
    volumes:
      - test-fhirstore-db:/data/db
      - test-fhirstore-config-db:/data/configdb

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
    container_name: elasticsearch
    environment:
      ELASTIC_PASSWORD: ${ES_PASSWORD}
    ports:
      - 9200:9200
    volumes:
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - test-elastic-db:/usr/share/elasticsearch/data

  monstache:
    image: rwynn/monstache:6.5.4
    container_name: monstache
    command: -f /opt/monstache.toml
    restart: always
    volumes:
      - ./monstache.toml:/opt/monstache.toml
    depends_on:
      - mongo
      - elasticsearch

  zookeeper:
    image: "zookeeper:3.4.10"
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    expose:
      - "2181"

  kafka:
    hostname: kafka
    image: "wurstmeister/kafka:0.10.2.1"
    restart: always
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  transformer:
    build:
      dockerfile: transformer/Dockerfile
      context: ../
    container_name: transformer
    image: arkhn/river-transformer:latest
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      FHIRSTORE_HOST: mongo
      FHIRSTORE_PORT: 27017
      FHIRSTORE_DATABASE: fhirstore
      FHIRSTORE_USER: arkhn
      FHIRSTORE_PASSWORD: SuperSecurePassword2019
      FHIR_API_URL: ${FHIR_API_URL}
      FHIR_API_TOKEN: ${FHIR_API_TOKEN}
      PYROG_API_URL: ${PYROG_API_URL}
      PYROG_LOGIN: ${PYROG_LOGIN}
      PYROG_PASSWORD: ${PYROG_PASSWORD}
    ports:
      - 3002

  loader:
    build:
      dockerfile: loader/Dockerfile
      context: ../
    container_name: loader
    image: arkhn/river-loader:latest
    restart: always
    depends_on:
      - kafka
      - mongo
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      FHIRSTORE_HOST: mongo
      FHIRSTORE_PORT: 27017
      FHIRSTORE_DATABASE: fhirstore
      FHIRSTORE_USER: arkhn
      FHIRSTORE_PASSWORD: SuperSecurePassword2019
      FHIR_API_URL: ${FHIR_API_URL}
      FHIR_API_TOKEN: ${FHIR_API_TOKEN}
      PYROG_API_URL: ${PYROG_API_URL}
      PYROG_LOGIN: ${PYROG_LOGIN}
      PYROG_PASSWORD: ${PYROG_PASSWORD}

  extractor:
    build:
      dockerfile: extractor/Dockerfile
      context: ../
    container_name: extractor
    image: arkhn/river-extractor:latest
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      FHIR_API_URL: ${FHIR_API_URL}
      FHIR_API_TOKEN: ${FHIR_API_TOKEN}
      PYROG_API_URL: ${PYROG_API_URL}
      PYROG_LOGIN: ${PYROG_LOGIN}
      PYROG_PASSWORD: ${PYROG_PASSWORD}
    ports:
      - 3001

  api:
    build:
      context: ../apigo
    container_name: api
    image: arkhn/river-api-go:latest
    restart: always
    depends_on:
      - kafka
    environment:
      PORT: 3000
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      EXTRACTOR_URL: http://extractor:3001
      TRANSFORMER_URL: http://transformer:3002
    ports:
      - "3001:3000"

  pyrog-server:
    image: arkhn/pyrog-server:latest
    container_name: pyrog-server
    expose:
      - 1000
    environment:
      APP_SECRET: ${PYROG_APP_SECRET}
      SUPERUSER_PASSWORD: ${PYROG_PASSWORD}
      FHIR_API_URL: http://fhir-api:2000
      JWT_PRIVATE_KEY: ${AUTH_SIGNING_PRIVATE_KEY}
      JWT_TOKEN: ${FHIR_API_TOKEN}
      PORT: 1000
      POSTGRES_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?schema=${POSTGRES_SCHEMA}
      REDIS_URL: redis://redis:${REDIS_PORT}
    volumes:
      - ./volumes/mapping.json:/app/mapping.json
      - ./volumes/credentials.json:/app/credentials.json
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres
    container_name: postgres
    command: -p ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - test-postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:5.0.7-alpine
    container_name: redis
    expose:
      - ${REDIS_PORT}
    volumes:
      - redis-data:/data

  fhir-api:
    image: arkhn/fhir-api:latest
    container_name: fhir-api
    expose:
      - 2000
    environment:
      DB_NAME: ${MONGO_DB_NAME}
      DB_HOST: mongo
      DB_PORT: ${MONGO_DB_PORT}
      DB_USER: ${MONGO_DB_USERNAME}
      DB_PASSWORD: ${MONGO_DB_PASSWORD}
      ES_HOST: http://${ES_HOST}:${ES_PORT}
      ES_USER: ${ES_USER}
      ES_PASSWORD: ${ES_PASSWORD}
      JWT_PUBLIC_KEY: ${AUTH_SIGNING_PUBLIC_KEY}
    depends_on:
      - mongo
      - elasticsearch
    volumes:
      - ./volumes/conceptMaps.json:/app/conceptMaps.json

volumes:
  test-mimic-db:
  test-fhirstore-db:
  test-fhirstore-config-db:
  test-elastic-db:
  test-postgres-data:
  kafka-config:
  redis-data:
