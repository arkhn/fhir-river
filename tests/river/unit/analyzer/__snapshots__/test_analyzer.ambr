# name: test_analyze_mapping
  <class 'Analysis'> {
    attributes=<class 'list'> [
      <class 'Attribute'> {
        input_groups=<class 'list'> [
          <class 'InputGroup'> {
            attribute=...,
            columns=<class 'list'> [
              <class 'SqlColumn'> {
                cleaning_script=None,
                column='subject_id',
                concept_map=None,
                joins=<class 'list'> [
                ],
                owner='public',
                table='admissions',
              },
            ],
            conditions=<class 'list'> [
            ],
            id='cktjv96f00054q7vz3mmm5sa5',
            merging_script=None,
            static_inputs=<class 'list'> [
            ],
          },
        ],
        path='subject.identifier.value',
        type='string',
      },
      <class 'Attribute'> {
        input_groups=<class 'list'> [
          <class 'InputGroup'> {
            attribute=...,
            columns=<class 'list'> [
            ],
            conditions=<class 'list'> [
            ],
            id='cktjv96f10058q7vzumyrzygk',
            merging_script=None,
            static_inputs=<class 'list'> [
              'in-progress',
            ],
          },
        ],
        path='status',
        type='code',
      },
      <class 'Attribute'> {
        input_groups=<class 'list'> [
          <class 'InputGroup'> {
            attribute=...,
            columns=<class 'list'> [
              <class 'SqlColumn'> {
                cleaning_script=None,
                column='dischtime',
                concept_map=None,
                joins=<class 'list'> [
                ],
                owner='public',
                table='admissions',
              },
            ],
            conditions=<class 'list'> [
            ],
            id='cktjv96f4005eq7vzmc6wl0lw',
            merging_script=None,
            static_inputs=<class 'list'> [
            ],
          },
        ],
        path='period.end',
        type='dateTime',
      },
      <class 'Attribute'> {
        input_groups=<class 'list'> [
          <class 'InputGroup'> {
            attribute=...,
            columns=<class 'list'> [
              <class 'SqlColumn'> {
                cleaning_script=None,
                column='admission_type',
                concept_map=None,
                joins=<class 'list'> [
                ],
                owner='public',
                table='admissions',
              },
            ],
            conditions=<class 'list'> [
            ],
            id='cktjv96f5005hq7vzymbp5el5',
            merging_script=None,
            static_inputs=<class 'list'> [
            ],
          },
        ],
        path='class.code',
        type='code',
      },
      <class 'Attribute'> {
        input_groups=<class 'list'> [
          <class 'InputGroup'> {
            attribute=...,
            columns=<class 'list'> [
              <class 'SqlColumn'> {
                cleaning_script=None,
                column='admittime',
                concept_map=None,
                joins=<class 'list'> [
                ],
                owner='public',
                table='admissions',
              },
            ],
            conditions=<class 'list'> [
            ],
            id='cktjv96f6005kq7vzes3iiipw',
            merging_script=None,
            static_inputs=<class 'list'> [
            ],
          },
        ],
        path='period.start',
        type='dateTime',
      },
      <class 'Attribute'> {
        input_groups=<class 'list'> [
          <class 'InputGroup'> {
            attribute=...,
            columns=<class 'list'> [
            ],
            conditions=<class 'list'> [
            ],
            id='cktjv96f7005nq7vzvisvdgiv',
            merging_script=None,
            static_inputs=<class 'list'> [
              'Patient',
            ],
          },
        ],
        path='subject.type',
        type='uri',
      },
      <class 'Attribute'> {
        input_groups=<class 'list'> [
          <class 'InputGroup'> {
            attribute=...,
            columns=<class 'list'> [
            ],
            conditions=<class 'list'> [
            ],
            id='cktjv96fb005xq7vzmyiy3993',
            merging_script=None,
            static_inputs=<class 'list'> [
              'http://terminology.arkhn.org/62248c11-1d3f-4071-bfa8-f640764a9f63',
            ],
          },
        ],
        path='subject.identifier.system',
        type='uri',
      },
      <class 'Attribute'> {
        input_groups=<class 'list'> [
          <class 'InputGroup'> {
            attribute=...,
            columns=<class 'list'> [
              <class 'SqlColumn'> {
                cleaning_script=None,
                column='diagnosis',
                concept_map=None,
                joins=<class 'list'> [
                ],
                owner='public',
                table='admissions',
              },
            ],
            conditions=<class 'list'> [
            ],
            id='cktjv96fd0063q7vzj4e6z8cs',
            merging_script=None,
            static_inputs=<class 'list'> [
            ],
          },
        ],
        path='diagnosis[0].condition.display',
        type='string',
      },
      <class 'Attribute'> {
        input_groups=<class 'list'> [
          <class 'InputGroup'> {
            attribute=...,
            columns=<class 'list'> [
              <class 'SqlColumn'> {
                cleaning_script=None,
                column='curr_service',
                concept_map=None,
                joins=<class 'list'> [
                  <class 'SqlJoin'> {
                    left=<class 'SqlColumn'> {
                      cleaning_script=None,
                      column='hadm_id',
                      concept_map=None,
                      joins=<class 'list'> [
                      ],
                      owner='public',
                      table='admissions',
                    },
                    right=<class 'SqlColumn'> {
                      cleaning_script=None,
                      column='hadm_id',
                      concept_map=None,
                      joins=<class 'list'> [
                      ],
                      owner='public',
                      table='services',
                    },
                  },
                ],
                owner='public',
                table='services',
              },
            ],
            conditions=<class 'list'> [
            ],
            id='cktjv96fh006cq7vzo391wz07',
            merging_script=None,
            static_inputs=<class 'list'> [
            ],
          },
        ],
        path='serviceProvider.display',
        type='string',
      },
    ],
    definition=<class 'dict'> {
      'abstract': False,
      'baseDefinition': 'http://hl7.org/fhir/StructureDefinition/DomainResource',
      'contact': <class 'list'> [
        <class 'dict'> {
          'telecom': <class 'list'> [
            <class 'dict'> {
              'system': 'url',
              'value': 'http://hl7.org/fhir',
            },
          ],
        },
        <class 'dict'> {
          'telecom': <class 'list'> [
            <class 'dict'> {
              'system': 'url',
              'value': 'http://www.hl7.org/Special/committees/pafm/index.cfm',
            },
          ],
        },
      ],
      'date': '2019-11-01T09:29:23+11:00',
      'derivation': 'specialization',
      'description': 'An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.',
      'differential': <class 'dict'> {
        'element': <class 'list'> [
          <class 'dict'> {
            'alias': <class 'list'> [
              'Visit',
            ],
            'definition': 'An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.',
            'id': 'Encounter',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': "Encounter[@moodCode='EVN']",
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter',
            'short': 'An interaction during which services are provided to the patient',
          },
          <class 'dict'> {
            'definition': 'Identifier(s) by which this encounter is known.',
            'id': 'Encounter.identifier',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.identifier',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.identifier',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-19',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.id',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.identifier',
            'short': 'Identifier(s) by which this encounter is known',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Identifier',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Current state of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterStatus',
                },
              ],
              'strength': 'required',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-status|4.0.1',
            },
            'comment': 'Note that internal business rules will determine the appropriate transitions that may occur between statuses (and also classes).',
            'definition': 'planned | arrived | triaged | in-progress | onleave | finished | cancelled +.',
            'id': 'Encounter.status',
            'isModifier': True,
            'isModifierReason': 'This element is labeled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.status',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.status',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'No clear equivalent in HL7 v2; active/finished could be inferred from PV1-44, PV1-45, PV2-24; inactive could be inferred from PV2-16',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.statusCode',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.status',
            'short': 'planned | arrived | triaged | in-progress | onleave | finished | cancelled +',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'code',
              },
            ],
          },
          <class 'dict'> {
            'comment': 'The current status is always found in the current version of the resource, not the status history.',
            'definition': 'The status history permits the encounter resource to contain the status history without needing to read through the historical versions of the resource, or even have the server store them.',
            'extension': <class 'list'> [
              <class 'dict'> {
                'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name',
                'valueString': 'StatusHistory',
              },
            ],
            'id': 'Encounter.statusHistory',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.statusHistory',
            'short': 'List of past encounter statuses',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Current state of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterStatus',
                },
              ],
              'strength': 'required',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-status|4.0.1',
            },
            'definition': 'planned | arrived | triaged | in-progress | onleave | finished | cancelled +.',
            'id': 'Encounter.statusHistory.status',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.statusHistory.status',
            'short': 'planned | arrived | triaged | in-progress | onleave | finished | cancelled +',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'code',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'The time that the episode was in the specified status.',
            'id': 'Encounter.statusHistory.period',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.statusHistory.period',
            'short': 'The time that the episode was in the specified status',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Classification of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterClass',
                },
              ],
              'strength': 'extensible',
              'valueSet': 'http://terminology.hl7.org/ValueSet/v3-ActEncounterCode',
            },
            'definition': 'Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations.',
            'id': 'Encounter.class',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.class',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-2',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.inboundRelationship[typeCode=SUBJ].source[classCode=LIST].code',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.class',
            'short': 'Classification of patient encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Coding',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient.',
            'extension': <class 'list'> [
              <class 'dict'> {
                'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name',
                'valueString': 'ClassHistory',
              },
            ],
            'id': 'Encounter.classHistory',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.classHistory',
            'short': 'List of past encounter classes',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Classification of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterClass',
                },
              ],
              'strength': 'extensible',
              'valueSet': 'http://terminology.hl7.org/ValueSet/v3-ActEncounterCode',
            },
            'definition': 'inpatient | outpatient | ambulatory | emergency +.',
            'id': 'Encounter.classHistory.class',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.classHistory.class',
            'short': 'inpatient | outpatient | ambulatory | emergency +',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Coding',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'The time that the episode was in the specified class.',
            'id': 'Encounter.classHistory.period',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.classHistory.period',
            'short': 'The time that the episode was in the specified class',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'The type of encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterType',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-type',
            },
            'comment': 'Since there are many ways to further classify encounters, this element is 0..*.',
            'definition': 'Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing, rehabilitation).',
            'id': 'Encounter.type',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.code',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.class',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-4 / PV1-18',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.code',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.type',
            'short': 'Specific type of encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Broad categorization of the service that is to be provided.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterServiceType',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/service-type',
            },
            'definition': 'Broad categorization of the service that is to be provided (e.g. cardiology).',
            'id': 'Encounter.serviceType',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.code',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-10',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.serviceType',
            'short': 'Specific type of service',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Indicates the urgency of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'Priority',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://terminology.hl7.org/ValueSet/v3-ActPriority',
            },
            'definition': 'Indicates the urgency of the encounter.',
            'id': 'Encounter.priority',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.grade',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV2-25',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.priorityCode',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.priority',
            'short': 'Indicates the urgency of the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'patient',
            ],
            'comment': 'While the encounter is always about the patient, the patient might not actually be known in all contexts of use, and there may be a group of patients that could be anonymous (such as in a group therapy for Alcoholics Anonymous - where the recording of the encounter could be used for billing on the number of people/staff and not important to the context of the specific patients) or alternately in veterinary care a herd of sheep receiving treatment (where the animals are not individually tracked).',
            'definition': 'The patient or group present at the encounter.',
            'id': 'Encounter.subject',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.subject',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.subject[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PID-3',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=SBJ]/role[classCode=PAT]',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.subject',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.subject',
            'short': 'The patient or group present at the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Patient',
                  'http://hl7.org/fhir/StructureDefinition/Group',
                ],
              },
            ],
          },
          <class 'dict'> {
            'definition': 'Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years).',
            'id': 'Encounter.episodeOfCare',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.context',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.context',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-54, PV1-53',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.episodeOfCare',
            'short': 'Episode(s) of care that this encounter should be recorded against',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/EpisodeOfCare',
                ],
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'incomingReferral',
            ],
            'definition': 'The request this encounter satisfies (e.g. incoming referral or procedure request).',
            'id': 'Encounter.basedOn',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.basedOn',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.reason.ClinicalDocument',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.basedOn',
            'short': 'The ServiceRequest that initiated this encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/ServiceRequest',
                ],
              },
            ],
          },
          <class 'dict'> {
            'definition': 'The list of people responsible for providing the service.',
            'id': 'Encounter.participant',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.performer',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'ROL',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=PFM]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.participant',
            'short': 'List of participants involved in the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Role of participant in encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'ParticipantType',
                },
              ],
              'strength': 'extensible',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-participant-type',
            },
            'comment': 'The participant type indicates how an individual participates in an encounter. It includes non-practitioner participants, and for practitioners this is to describe the action type in the context of this encounter (e.g. Admitting Dr, Attending Dr, Translator, Consulting Dr). This is different to the practitioner roles which are functional roles, derived from terms of employment, education, licensing, etc.',
            'definition': 'Role of participant in encounter.',
            'id': 'Encounter.participant.type',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.performer.function',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'ROL-3 (or maybe PRT-4)',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.functionCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.participant.type',
            'short': 'Role of participant in encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'definition': "The period of time that the specified participant participated in the encounter. These can overlap or be sub-sets of the overall encounter's period.",
            'id': 'Encounter.participant.period',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'ROL-5, ROL-6 (or maybe PRT-5)',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.time',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.participant.period',
            'short': 'Period of time during the encounter that the participant participated',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'Persons involved in the encounter other than the patient.',
            'id': 'Encounter.participant.individual',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.performer.actor',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.who',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'ROL-4',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.role',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.participant.individual',
            'short': 'Persons involved in the encounter other than the patient',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Practitioner',
                  'http://hl7.org/fhir/StructureDefinition/PractitionerRole',
                  'http://hl7.org/fhir/StructureDefinition/RelatedPerson',
                ],
              },
            ],
          },
          <class 'dict'> {
            'definition': 'The appointment that scheduled this encounter.',
            'id': 'Encounter.appointment',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.basedOn',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'SCH-1 / SCH-2',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=FLFS].target[classCode=ENC, moodCode=APT]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.appointment',
            'short': 'The appointment that scheduled this encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Appointment',
                ],
              },
            ],
          },
          <class 'dict'> {
            'comment': 'If not (yet) known, the end of the Period may be omitted.',
            'definition': 'The start and end time of the encounter.',
            'id': 'Encounter.period',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.occurrence[x]',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.done[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-44, PV1-45',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.effectiveTime (low & high)',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.period',
            'short': 'The start and end time of the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'comment': 'May differ from the time the Encounter.period lasted because of leave of absence.',
            'definition': 'Quantity of time the encounter lasted. This excludes the time during leaves of absence.',
            'id': 'Encounter.length',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.occurrence[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': '(PV1-45 less PV1-44) iff ( (PV1-44 not empty) and (PV1-45 not empty) ); units in minutes',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.lengthOfStayQuantity',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.length',
            'short': 'Quantity of time the encounter lasted (less time absent)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Duration',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'Indication',
              'Admission diagnosis',
            ],
            'binding': <class 'dict'> {
              'description': 'Reason why the encounter takes place.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterReason',
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-reason',
            },
            'comment': 'For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis).',
            'definition': 'Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis.',
            'id': 'Encounter.reasonCode',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.reasonCode',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.why[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'EVN-4 / PV2-3 (note: PV2-3 is nominally constrained to inpatient admissions; HL7 v2 makes no vocabulary suggestions for PV2-3; would not expect PV2 segment or PV2-3 to be in use in all implementations )',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.reasonCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.reasonCode',
            'short': 'Coded reason the encounter takes place',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'Indication',
              'Admission diagnosis',
            ],
            'comment': 'For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis).',
            'definition': 'Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis.',
            'id': 'Encounter.reasonReference',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.reasonCode',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.why[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'EVN-4 / PV2-3 (note: PV2-3 is nominally constrained to inpatient admissions; HL7 v2 makes no vocabulary suggestions for PV2-3; would not expect PV2 segment or PV2-3 to be in use in all implementations )',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.reasonCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.reasonReference',
            'short': 'Reason the encounter takes place (reference)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Condition',
                  'http://hl7.org/fhir/StructureDefinition/Procedure',
                  'http://hl7.org/fhir/StructureDefinition/Observation',
                  'http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation',
                ],
              },
            ],
          },
          <class 'dict'> {
            'definition': 'The list of diagnosis relevant to this encounter.',
            'extension': <class 'list'> [
              <class 'dict'> {
                'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name',
                'valueString': 'Diagnosis',
              },
            ],
            'id': 'Encounter.diagnosis',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=RSON]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.diagnosis',
            'short': 'The list of diagnosis relevant to this encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'Admission diagnosis',
              'discharge diagnosis',
              'indication',
            ],
            'comment': 'For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis).',
            'definition': 'Reason the encounter takes place, as specified using information from another resource. For admissions, this is the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.',
            'id': 'Encounter.diagnosis.condition',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.reasonReference',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.why[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'Resources that would commonly referenced at Encounter.indication would be Condition and/or Procedure. These most closely align with DG1/PRB and PR1 respectively.',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=RSON].target',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.diagnosis.condition',
            'short': 'The diagnosis or procedure relevant to the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Condition',
                  'http://hl7.org/fhir/StructureDefinition/Procedure',
                ],
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'The type of diagnosis this condition represents.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'DiagnosisRole',
                },
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding',
                  'valueBoolean': True,
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/diagnosis-role',
            },
            'definition': 'Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …).',
            'id': 'Encounter.diagnosis.use',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.diagnosis.use',
            'short': 'Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'Ranking of the diagnosis (for each role type).',
            'id': 'Encounter.diagnosis.rank',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=RSON].priority',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.diagnosis.rank',
            'short': 'Ranking of the diagnosis (for each role type)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'positiveInt',
              },
            ],
          },
          <class 'dict'> {
            'comment': 'The billing system may choose to allocate billable items associated with the Encounter to different referenced Accounts based on internal business rules.',
            'definition': 'The set of accounts that may be used for billing for this Encounter.',
            'id': 'Encounter.account',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.pertains.A_Account',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.account',
            'short': 'The set of accounts that may be used for billing for this Encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Account',
                ],
              },
            ],
          },
          <class 'dict'> {
            'comment': 'An Encounter may cover more than just the inpatient stay. Contexts such as outpatients, community clinics, and aged care facilities are also included.  The duration recorded in the period of this encounter covers the entire scope of this hospitalization record.',
            'definition': 'Details about the admission to a healthcare service.',
            'id': 'Encounter.hospitalization',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=COMP].target[classCode=ENC, moodCode=EVN]',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization',
            'short': 'Details about the admission to a healthcare service',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'Pre-admission identifier.',
            'id': 'Encounter.hospitalization.preAdmissionIdentifier',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-5',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.id',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.preAdmissionIdentifier',
            'short': 'Pre-admission identifier',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Identifier',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'The location/organization from which the patient came before admission.',
            'id': 'Encounter.hospitalization.origin',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=ORG].role',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.origin',
            'short': 'The location/organization from which the patient came before admission',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Location',
                  'http://hl7.org/fhir/StructureDefinition/Organization',
                ],
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'From where the patient was admitted.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'AdmitSource',
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-admit-source',
            },
            'definition': 'From where patient was admitted (physician referral, transfer).',
            'id': 'Encounter.hospitalization.admitSource',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-14',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.admissionReferralSourceCode',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.admitSource',
            'short': 'From where patient was admitted (physician referral, transfer)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'The reason for re-admission of this hospitalization encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'ReAdmissionType',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://terminology.hl7.org/ValueSet/v2-0092',
            },
            'definition': 'Whether this hospitalization is a readmission and why if known.',
            'id': 'Encounter.hospitalization.reAdmission',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-13',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.reAdmission',
            'short': 'The type of hospital re-admission that has occurred (if any). If the value is absent, then this is not identified as a readmission',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Medical, cultural or ethical food preferences to help with catering requirements.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'PatientDiet',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-diet',
            },
            'comment': 'For example, a patient may request both a dairy-free and nut-free diet preference (not mutually exclusive).',
            'definition': 'Diet preferences reported by the patient.',
            'id': 'Encounter.hospitalization.dietPreference',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-38',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=COMP].target[classCode=SBADM, moodCode=EVN, code="diet"]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.hospitalization.dietPreference',
            'requirements': "Used to track patient's diet restrictions and/or preference. For a complete description of the nutrition needs of a patient during their stay, one should use the nutritionOrder resource which links to Encounter.",
            'short': 'Diet preferences reported by the patient',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Special courtesies.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'Courtesies',
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-special-courtesy',
            },
            'definition': 'Special courtesies (VIP, board member).',
            'id': 'Encounter.hospitalization.specialCourtesy',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-16',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.specialCourtesiesCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.hospitalization.specialCourtesy',
            'short': 'Special courtesies (VIP, board member)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Special arrangements.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'Arrangements',
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-special-arrangements',
            },
            'definition': 'Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things.',
            'id': 'Encounter.hospitalization.specialArrangement',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-15 / OBR-30 / OBR-43',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.specialArrangementCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.hospitalization.specialArrangement',
            'short': 'Wheelchair, translator, stretcher, etc.',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'Location/organization to which the patient is discharged.',
            'id': 'Encounter.hospitalization.destination',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-37',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=DST]',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.destination',
            'short': 'Location/organization to which the patient is discharged',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Location',
                  'http://hl7.org/fhir/StructureDefinition/Organization',
                ],
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Discharge Disposition.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'DischargeDisp',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-discharge-disposition',
            },
            'definition': 'Category or kind of location after discharge.',
            'id': 'Encounter.hospitalization.dischargeDisposition',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-36',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.dischargeDispositionCode',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.dischargeDisposition',
            'short': 'Category or kind of location after discharge',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'comment': 'Virtual encounters can be recorded in the Encounter by specifying a location reference to a location of type "kind" such as "client\'s home" and an encounter.class = "virtual".',
            'definition': 'List of locations where  the patient has been during this encounter.',
            'id': 'Encounter.location',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=LOC]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.location',
            'short': 'List of locations where the patient has been',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'The location where the encounter takes place.',
            'id': 'Encounter.location.location',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.location',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.where[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-3 / PV1-6 / PV1-11 / PV1-42 / PV1-43',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.role',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.location.location',
            'short': 'Location the encounter takes place',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Location',
                ],
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'The status of the location.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterLocationStatus',
                },
              ],
              'strength': 'required',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-location-status|4.0.1',
            },
            'comment': 'When the patient is no longer active at a location, then the period end date is entered, and the status may be changed to completed.',
            'definition': "The status of the participants' presence at the specified location during the period specified. If the participant is no longer at the location, then the period will have an end date/time.",
            'id': 'Encounter.location.status',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.role.statusCode',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.location.status',
            'short': 'planned | active | reserved | completed',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'code',
              },
            ],
          },
          <class 'dict'> {
            'binding': <class 'dict'> {
              'description': 'Physical form of the location.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'PhysicalType',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/location-physical-type',
            },
            'comment': 'This information is de-normalized from the Location resource to support the easier understanding of the encounter resource and processing in messaging or query.  There may be many levels in the hierachy, and this may only pic specific levels that are required for a specific usage scenario.',
            'definition': 'This will be used to specify the required levels (bed/ward/room/etc.) desired to be recorded to simplify either messaging or query.',
            'id': 'Encounter.location.physicalType',
            'max': '1',
            'min': 0,
            'path': 'Encounter.location.physicalType',
            'short': 'The physical type of the location (usually the level in the location hierachy - bed room ward etc.)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'definition': 'Time period during which the patient was present at the location.',
            'id': 'Encounter.location.period',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.time',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.location.period',
            'short': 'Time period during which the patient was present at the location',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'definition': "The organization that is primarily responsible for this Encounter's services. This MAY be the same as the organization on the Patient record, however it could be different, such as if the actor performing the services was from an external organization (which may be billed seperately) for an external consultation.  Refer to the example bundle showing an abbreviated set of Encounters for a colonoscopy.",
            'id': 'Encounter.serviceProvider',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.performer.actor',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PL.6  & PL.1',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.particiaption[typeCode=PFM].role',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.serviceProvider',
            'short': 'The organization (facility) responsible for this encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Organization',
                ],
              },
            ],
          },
          <class 'dict'> {
            'comment': "This is also used for associating a child's encounter back to the mother's encounter.  Refer to the Notes section in the Patient resource for further details.",
            'definition': 'Another Encounter of which this encounter is a part of (administratively or in time).',
            'id': 'Encounter.partOf',
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.partOf',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.inboundRelationship[typeCode=COMP].source[classCode=COMP, moodCode=EVN]',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.partOf',
            'short': 'Another Encounter this encounter is part of',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-hierarchy',
                    'valueBoolean': True,
                  },
                ],
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Encounter',
                ],
              },
            ],
          },
        ],
      },
      'extension': <class 'list'> [
        <class 'dict'> {
          'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-category',
          'valueString': 'Base.Management',
        },
        <class 'dict'> {
          'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status',
          'valueCode': 'trial-use',
        },
        <class 'dict'> {
          'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm',
          'valueInteger': 2,
        },
        <class 'dict'> {
          'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-security-category',
          'valueCode': 'patient',
        },
        <class 'dict'> {
          'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-wg',
          'valueCode': 'pa',
        },
      ],
      'fhirVersion': '4.0.1',
      'id': 'Encounter',
      'kind': 'resource',
      'mapping': <class 'list'> [
        <class 'dict'> {
          'identity': 'workflow',
          'name': 'Workflow Pattern',
          'uri': 'http://hl7.org/fhir/workflow',
        },
        <class 'dict'> {
          'identity': 'rim',
          'name': 'RIM Mapping',
          'uri': 'http://hl7.org/v3',
        },
        <class 'dict'> {
          'identity': 'w5',
          'name': 'FiveWs Pattern Mapping',
          'uri': 'http://hl7.org/fhir/fivews',
        },
        <class 'dict'> {
          'identity': 'v2',
          'name': 'HL7 v2 Mapping',
          'uri': 'http://hl7.org/v2',
        },
      ],
      'meta': <class 'dict'> {
        'lastUpdated': '2021-08-17T13:28:44.185+00:00',
        'source': '#Fh3aX4JrKwaRcBwj',
        'versionId': '1',
      },
      'name': 'Encounter',
      'publisher': 'Health Level Seven International (Patient Administration)',
      'resourceType': 'StructureDefinition',
      'snapshot': <class 'dict'> {
        'element': <class 'list'> [
          <class 'dict'> {
            'alias': <class 'list'> [
              'Visit',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'contained.contained.empty()',
                'human': 'If the resource is contained in another resource, it SHALL NOT contain nested Resources',
                'key': 'dom-2',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/DomainResource',
                'xpath': 'not(parent::f:contained and f:contained)',
              },
              <class 'dict'> {
                'expression': "contained.where((('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(canonical) = '#').exists()).not()).trace('unmatched', id).empty()",
                'human': 'If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource',
                'key': 'dom-3',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/DomainResource',
                'xpath': "not(exists(for $id in f:contained/*/f:id/@value return $contained[not(parent::*/descendant::f:reference/@value=concat('#', $contained/*/id/@value) or descendant::f:reference[@value='#'])]))",
              },
              <class 'dict'> {
                'expression': 'contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()',
                'human': 'If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated',
                'key': 'dom-4',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/DomainResource',
                'xpath': 'not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))',
              },
              <class 'dict'> {
                'expression': 'contained.meta.security.empty()',
                'human': 'If a resource is contained in another resource, it SHALL NOT have a security label',
                'key': 'dom-5',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/DomainResource',
                'xpath': 'not(exists(f:contained/*/f:meta/f:security))',
              },
              <class 'dict'> {
                'expression': 'text.`div`.exists()',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice',
                    'valueBoolean': True,
                  },
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation',
                    'valueMarkdown': 'When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.',
                  },
                ],
                'human': 'A resource should have narrative for robust management',
                'key': 'dom-6',
                'severity': 'warning',
                'source': 'http://hl7.org/fhir/StructureDefinition/DomainResource',
                'xpath': 'exists(f:text/h:div)',
              },
            ],
            'definition': 'An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.',
            'id': 'Encounter',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'Entity. Role, or Act',
              },
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': "Encounter[@moodCode='EVN']",
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter',
            'short': 'An interaction during which services are provided to the patient',
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Resource.id',
            },
            'comment': 'The only time that a resource does not have an id is when it is being submitted to the server using a create operation.',
            'definition': 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.',
            'id': 'Encounter.id',
            'isModifier': False,
            'isSummary': True,
            'max': '1',
            'min': 0,
            'path': 'Encounter.id',
            'short': 'Logical id of this artifact',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'http://hl7.org/fhirpath/System.String',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type',
                    'valueUrl': 'string',
                  },
                ],
                'fhir_comments': <class 'list'> [
                  ' Note: special primitive values have a FHIRPath system type. e.g. this is compiler magic (j) ',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Resource.meta',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.',
            'id': 'Encounter.meta',
            'isModifier': False,
            'isSummary': True,
            'max': '1',
            'min': 0,
            'path': 'Encounter.meta',
            'short': 'Metadata about the resource',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Meta',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Resource.implicitRules',
            },
            'comment': "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.',
            'id': 'Encounter.implicitRules',
            'isModifier': True,
            'isModifierReason': "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
            'isSummary': True,
            'max': '1',
            'min': 0,
            'path': 'Encounter.implicitRules',
            'short': 'A set of rules under which this content was created',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'uri',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Resource.language',
            },
            'binding': <class 'dict'> {
              'description': 'A human language.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet',
                  'valueCanonical': 'http://hl7.org/fhir/ValueSet/all-languages',
                },
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'Language',
                },
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding',
                  'valueBoolean': True,
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/languages',
            },
            'comment': 'Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The base language in which the resource is written.',
            'id': 'Encounter.language',
            'isModifier': False,
            'isSummary': False,
            'max': '1',
            'min': 0,
            'path': 'Encounter.language',
            'short': 'Language of the resource content',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'code',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'narrative',
              'html',
              'xhtml',
              'display',
            ],
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'DomainResource.text',
            },
            'comment': 'Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.',
            'id': 'Encounter.text',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'Act.text?',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.text',
            'short': 'Text summary of the resource, for human interpretation',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Narrative',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'inline resources',
              'anonymous resources',
              'contained resources',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'DomainResource.contained',
            },
            'comment': 'This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.',
            'definition': 'These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.',
            'id': 'Encounter.contained',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'N/A',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.contained',
            'short': 'Contained, inline Resources',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Resource',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'DomainResource.extension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': 'May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.',
            'id': 'Encounter.extension',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'N/A',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.extension',
            'short': 'Additional content defined by implementations',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'DomainResource.modifierExtension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            'id': 'Encounter.modifierExtension',
            'isModifier': True,
            'isModifierReason': 'Modifier extensions are expected to modify the meaning or interpretation of the resource that contains them',
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'N/A',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.modifierExtension',
            'requirements': 'Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](extensibility.html#modifierExtension).',
            'short': 'Extensions that cannot be ignored',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.identifier',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Identifier(s) by which this encounter is known.',
            'id': 'Encounter.identifier',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.identifier',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.identifier',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-19',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.id',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.identifier',
            'short': 'Identifier(s) by which this encounter is known',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Identifier',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 1,
              'path': 'Encounter.status',
            },
            'binding': <class 'dict'> {
              'description': 'Current state of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterStatus',
                },
              ],
              'strength': 'required',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-status|4.0.1',
            },
            'comment': 'Note that internal business rules will determine the appropriate transitions that may occur between statuses (and also classes).',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'planned | arrived | triaged | in-progress | onleave | finished | cancelled +.',
            'id': 'Encounter.status',
            'isModifier': True,
            'isModifierReason': 'This element is labeled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.status',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.status',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'No clear equivalent in HL7 v2; active/finished could be inferred from PV1-44, PV1-45, PV2-24; inactive could be inferred from PV2-16',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.statusCode',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.status',
            'short': 'planned | arrived | triaged | in-progress | onleave | finished | cancelled +',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'code',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.statusHistory',
            },
            'comment': 'The current status is always found in the current version of the resource, not the status history.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The status history permits the encounter resource to contain the status history without needing to read through the historical versions of the resource, or even have the server store them.',
            'extension': <class 'list'> [
              <class 'dict'> {
                'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name',
                'valueString': 'StatusHistory',
              },
            ],
            'id': 'Encounter.statusHistory',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.statusHistory',
            'short': 'List of past encounter statuses',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Element.id',
            },
            'definition': 'Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.',
            'id': 'Encounter.statusHistory.id',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.statusHistory.id',
            'representation': <class 'list'> [
              'xmlAttr',
            ],
            'short': 'Unique id for inter-element referencing',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'http://hl7.org/fhirpath/System.String',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type',
                    'valueUrl': 'string',
                  },
                ],
                'fhir_comments': <class 'list'> [
                  ' Note: special primitive values have a FHIRPath system type. e.g. this is compiler magic (j) ',
                ],
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Element.extension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.',
            'id': 'Encounter.statusHistory.extension',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.statusHistory.extension',
            'short': 'Additional content defined by implementations',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
              'modifiers',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'BackboneElement.modifierExtension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            'id': 'Encounter.statusHistory.modifierExtension',
            'isModifier': True,
            'isModifierReason': 'Modifier extensions are expected to modify the meaning or interpretation of the element that contains them',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'N/A',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.statusHistory.modifierExtension',
            'requirements': 'Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](extensibility.html#modifierExtension).',
            'short': 'Extensions that cannot be ignored even if unrecognized',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 1,
              'path': 'Encounter.statusHistory.status',
            },
            'binding': <class 'dict'> {
              'description': 'Current state of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterStatus',
                },
              ],
              'strength': 'required',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-status|4.0.1',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'planned | arrived | triaged | in-progress | onleave | finished | cancelled +.',
            'id': 'Encounter.statusHistory.status',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.statusHistory.status',
            'short': 'planned | arrived | triaged | in-progress | onleave | finished | cancelled +',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'code',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 1,
              'path': 'Encounter.statusHistory.period',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The time that the episode was in the specified status.',
            'id': 'Encounter.statusHistory.period',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.statusHistory.period',
            'short': 'The time that the episode was in the specified status',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 1,
              'path': 'Encounter.class',
            },
            'binding': <class 'dict'> {
              'description': 'Classification of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterClass',
                },
              ],
              'strength': 'extensible',
              'valueSet': 'http://terminology.hl7.org/ValueSet/v3-ActEncounterCode',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations.',
            'id': 'Encounter.class',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.class',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-2',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.inboundRelationship[typeCode=SUBJ].source[classCode=LIST].code',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.class',
            'short': 'Classification of patient encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Coding',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.classHistory',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient.',
            'extension': <class 'list'> [
              <class 'dict'> {
                'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name',
                'valueString': 'ClassHistory',
              },
            ],
            'id': 'Encounter.classHistory',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.classHistory',
            'short': 'List of past encounter classes',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Element.id',
            },
            'definition': 'Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.',
            'id': 'Encounter.classHistory.id',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.classHistory.id',
            'representation': <class 'list'> [
              'xmlAttr',
            ],
            'short': 'Unique id for inter-element referencing',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'http://hl7.org/fhirpath/System.String',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type',
                    'valueUrl': 'string',
                  },
                ],
                'fhir_comments': <class 'list'> [
                  ' Note: special primitive values have a FHIRPath system type. e.g. this is compiler magic (j) ',
                ],
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Element.extension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.',
            'id': 'Encounter.classHistory.extension',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.classHistory.extension',
            'short': 'Additional content defined by implementations',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
              'modifiers',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'BackboneElement.modifierExtension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            'id': 'Encounter.classHistory.modifierExtension',
            'isModifier': True,
            'isModifierReason': 'Modifier extensions are expected to modify the meaning or interpretation of the element that contains them',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'N/A',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.classHistory.modifierExtension',
            'requirements': 'Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](extensibility.html#modifierExtension).',
            'short': 'Extensions that cannot be ignored even if unrecognized',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 1,
              'path': 'Encounter.classHistory.class',
            },
            'binding': <class 'dict'> {
              'description': 'Classification of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterClass',
                },
              ],
              'strength': 'extensible',
              'valueSet': 'http://terminology.hl7.org/ValueSet/v3-ActEncounterCode',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'inpatient | outpatient | ambulatory | emergency +.',
            'id': 'Encounter.classHistory.class',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.classHistory.class',
            'short': 'inpatient | outpatient | ambulatory | emergency +',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Coding',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 1,
              'path': 'Encounter.classHistory.period',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The time that the episode was in the specified class.',
            'id': 'Encounter.classHistory.period',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.classHistory.period',
            'short': 'The time that the episode was in the specified class',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.type',
            },
            'binding': <class 'dict'> {
              'description': 'The type of encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterType',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-type',
            },
            'comment': 'Since there are many ways to further classify encounters, this element is 0..*.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing, rehabilitation).',
            'id': 'Encounter.type',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.code',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.class',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-4 / PV1-18',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.code',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.type',
            'short': 'Specific type of encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.serviceType',
            },
            'binding': <class 'dict'> {
              'description': 'Broad categorization of the service that is to be provided.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterServiceType',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/service-type',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Broad categorization of the service that is to be provided (e.g. cardiology).',
            'id': 'Encounter.serviceType',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.code',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-10',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.serviceType',
            'short': 'Specific type of service',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.priority',
            },
            'binding': <class 'dict'> {
              'description': 'Indicates the urgency of the encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'Priority',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://terminology.hl7.org/ValueSet/v3-ActPriority',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Indicates the urgency of the encounter.',
            'id': 'Encounter.priority',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.grade',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV2-25',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.priorityCode',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.priority',
            'short': 'Indicates the urgency of the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'patient',
            ],
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.subject',
            },
            'comment': 'While the encounter is always about the patient, the patient might not actually be known in all contexts of use, and there may be a group of patients that could be anonymous (such as in a group therapy for Alcoholics Anonymous - where the recording of the encounter could be used for billing on the number of people/staff and not important to the context of the specific patients) or alternately in veterinary care a herd of sheep receiving treatment (where the animals are not individually tracked).',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The patient or group present at the encounter.',
            'id': 'Encounter.subject',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.subject',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.subject[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PID-3',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=SBJ]/role[classCode=PAT]',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.subject',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.subject',
            'short': 'The patient or group present at the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Patient',
                  'http://hl7.org/fhir/StructureDefinition/Group',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.episodeOfCare',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years).',
            'id': 'Encounter.episodeOfCare',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.context',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.context',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-54, PV1-53',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.episodeOfCare',
            'short': 'Episode(s) of care that this encounter should be recorded against',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/EpisodeOfCare',
                ],
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'incomingReferral',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.basedOn',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The request this encounter satisfies (e.g. incoming referral or procedure request).',
            'id': 'Encounter.basedOn',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.basedOn',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.reason.ClinicalDocument',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.basedOn',
            'short': 'The ServiceRequest that initiated this encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/ServiceRequest',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.participant',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The list of people responsible for providing the service.',
            'id': 'Encounter.participant',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.performer',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'ROL',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=PFM]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.participant',
            'short': 'List of participants involved in the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Element.id',
            },
            'definition': 'Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.',
            'id': 'Encounter.participant.id',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.participant.id',
            'representation': <class 'list'> [
              'xmlAttr',
            ],
            'short': 'Unique id for inter-element referencing',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'http://hl7.org/fhirpath/System.String',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type',
                    'valueUrl': 'string',
                  },
                ],
                'fhir_comments': <class 'list'> [
                  ' Note: special primitive values have a FHIRPath system type. e.g. this is compiler magic (j) ',
                ],
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Element.extension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.',
            'id': 'Encounter.participant.extension',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.participant.extension',
            'short': 'Additional content defined by implementations',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
              'modifiers',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'BackboneElement.modifierExtension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            'id': 'Encounter.participant.modifierExtension',
            'isModifier': True,
            'isModifierReason': 'Modifier extensions are expected to modify the meaning or interpretation of the element that contains them',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'N/A',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.participant.modifierExtension',
            'requirements': 'Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](extensibility.html#modifierExtension).',
            'short': 'Extensions that cannot be ignored even if unrecognized',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.participant.type',
            },
            'binding': <class 'dict'> {
              'description': 'Role of participant in encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'ParticipantType',
                },
              ],
              'strength': 'extensible',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-participant-type',
            },
            'comment': 'The participant type indicates how an individual participates in an encounter. It includes non-practitioner participants, and for practitioners this is to describe the action type in the context of this encounter (e.g. Admitting Dr, Attending Dr, Translator, Consulting Dr). This is different to the practitioner roles which are functional roles, derived from terms of employment, education, licensing, etc.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Role of participant in encounter.',
            'id': 'Encounter.participant.type',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.performer.function',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'ROL-3 (or maybe PRT-4)',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.functionCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.participant.type',
            'short': 'Role of participant in encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.participant.period',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': "The period of time that the specified participant participated in the encounter. These can overlap or be sub-sets of the overall encounter's period.",
            'id': 'Encounter.participant.period',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'ROL-5, ROL-6 (or maybe PRT-5)',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.time',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.participant.period',
            'short': 'Period of time during the encounter that the participant participated',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.participant.individual',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Persons involved in the encounter other than the patient.',
            'id': 'Encounter.participant.individual',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.performer.actor',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.who',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'ROL-4',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.role',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.participant.individual',
            'short': 'Persons involved in the encounter other than the patient',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Practitioner',
                  'http://hl7.org/fhir/StructureDefinition/PractitionerRole',
                  'http://hl7.org/fhir/StructureDefinition/RelatedPerson',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.appointment',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The appointment that scheduled this encounter.',
            'id': 'Encounter.appointment',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.basedOn',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'SCH-1 / SCH-2',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=FLFS].target[classCode=ENC, moodCode=APT]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.appointment',
            'short': 'The appointment that scheduled this encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Appointment',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.period',
            },
            'comment': 'If not (yet) known, the end of the Period may be omitted.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The start and end time of the encounter.',
            'id': 'Encounter.period',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.occurrence[x]',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.done[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-44, PV1-45',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.effectiveTime (low & high)',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.period',
            'short': 'The start and end time of the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.length',
            },
            'comment': 'May differ from the time the Encounter.period lasted because of leave of absence.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Quantity of time the encounter lasted. This excludes the time during leaves of absence.',
            'id': 'Encounter.length',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.occurrence[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': '(PV1-45 less PV1-44) iff ( (PV1-44 not empty) and (PV1-45 not empty) ); units in minutes',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.lengthOfStayQuantity',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.length',
            'short': 'Quantity of time the encounter lasted (less time absent)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Duration',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'Indication',
              'Admission diagnosis',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.reasonCode',
            },
            'binding': <class 'dict'> {
              'description': 'Reason why the encounter takes place.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterReason',
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-reason',
            },
            'comment': 'For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis).',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis.',
            'id': 'Encounter.reasonCode',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.reasonCode',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.why[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'EVN-4 / PV2-3 (note: PV2-3 is nominally constrained to inpatient admissions; HL7 v2 makes no vocabulary suggestions for PV2-3; would not expect PV2 segment or PV2-3 to be in use in all implementations )',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.reasonCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.reasonCode',
            'short': 'Coded reason the encounter takes place',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'Indication',
              'Admission diagnosis',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.reasonReference',
            },
            'comment': 'For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis).',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis.',
            'id': 'Encounter.reasonReference',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.reasonCode',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.why[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'EVN-4 / PV2-3 (note: PV2-3 is nominally constrained to inpatient admissions; HL7 v2 makes no vocabulary suggestions for PV2-3; would not expect PV2 segment or PV2-3 to be in use in all implementations )',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.reasonCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.reasonReference',
            'short': 'Reason the encounter takes place (reference)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Condition',
                  'http://hl7.org/fhir/StructureDefinition/Procedure',
                  'http://hl7.org/fhir/StructureDefinition/Observation',
                  'http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.diagnosis',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The list of diagnosis relevant to this encounter.',
            'extension': <class 'list'> [
              <class 'dict'> {
                'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name',
                'valueString': 'Diagnosis',
              },
            ],
            'id': 'Encounter.diagnosis',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=RSON]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.diagnosis',
            'short': 'The list of diagnosis relevant to this encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Element.id',
            },
            'definition': 'Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.',
            'id': 'Encounter.diagnosis.id',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.diagnosis.id',
            'representation': <class 'list'> [
              'xmlAttr',
            ],
            'short': 'Unique id for inter-element referencing',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'http://hl7.org/fhirpath/System.String',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type',
                    'valueUrl': 'string',
                  },
                ],
                'fhir_comments': <class 'list'> [
                  ' Note: special primitive values have a FHIRPath system type. e.g. this is compiler magic (j) ',
                ],
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Element.extension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.',
            'id': 'Encounter.diagnosis.extension',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.diagnosis.extension',
            'short': 'Additional content defined by implementations',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
              'modifiers',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'BackboneElement.modifierExtension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            'id': 'Encounter.diagnosis.modifierExtension',
            'isModifier': True,
            'isModifierReason': 'Modifier extensions are expected to modify the meaning or interpretation of the element that contains them',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'N/A',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.diagnosis.modifierExtension',
            'requirements': 'Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](extensibility.html#modifierExtension).',
            'short': 'Extensions that cannot be ignored even if unrecognized',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'Admission diagnosis',
              'discharge diagnosis',
              'indication',
            ],
            'base': <class 'dict'> {
              'max': '1',
              'min': 1,
              'path': 'Encounter.diagnosis.condition',
            },
            'comment': 'For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis).',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Reason the encounter takes place, as specified using information from another resource. For admissions, this is the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.',
            'id': 'Encounter.diagnosis.condition',
            'isModifier': False,
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.reasonReference',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.why[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'Resources that would commonly referenced at Encounter.indication would be Condition and/or Procedure. These most closely align with DG1/PRB and PR1 respectively.',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=RSON].target',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.diagnosis.condition',
            'short': 'The diagnosis or procedure relevant to the encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Condition',
                  'http://hl7.org/fhir/StructureDefinition/Procedure',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.diagnosis.use',
            },
            'binding': <class 'dict'> {
              'description': 'The type of diagnosis this condition represents.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'DiagnosisRole',
                },
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding',
                  'valueBoolean': True,
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/diagnosis-role',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …).',
            'id': 'Encounter.diagnosis.use',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.diagnosis.use',
            'short': 'Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.diagnosis.rank',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Ranking of the diagnosis (for each role type).',
            'id': 'Encounter.diagnosis.rank',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=RSON].priority',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.diagnosis.rank',
            'short': 'Ranking of the diagnosis (for each role type)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'positiveInt',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.account',
            },
            'comment': 'The billing system may choose to allocate billable items associated with the Encounter to different referenced Accounts based on internal business rules.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The set of accounts that may be used for billing for this Encounter.',
            'id': 'Encounter.account',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.pertains.A_Account',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.account',
            'short': 'The set of accounts that may be used for billing for this Encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Account',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.hospitalization',
            },
            'comment': 'An Encounter may cover more than just the inpatient stay. Contexts such as outpatients, community clinics, and aged care facilities are also included.  The duration recorded in the period of this encounter covers the entire scope of this hospitalization record.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Details about the admission to a healthcare service.',
            'id': 'Encounter.hospitalization',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=COMP].target[classCode=ENC, moodCode=EVN]',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization',
            'short': 'Details about the admission to a healthcare service',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Element.id',
            },
            'definition': 'Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.',
            'id': 'Encounter.hospitalization.id',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.id',
            'representation': <class 'list'> [
              'xmlAttr',
            ],
            'short': 'Unique id for inter-element referencing',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'http://hl7.org/fhirpath/System.String',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type',
                    'valueUrl': 'string',
                  },
                ],
                'fhir_comments': <class 'list'> [
                  ' Note: special primitive values have a FHIRPath system type. e.g. this is compiler magic (j) ',
                ],
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Element.extension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.',
            'id': 'Encounter.hospitalization.extension',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.hospitalization.extension',
            'short': 'Additional content defined by implementations',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
              'modifiers',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'BackboneElement.modifierExtension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            'id': 'Encounter.hospitalization.modifierExtension',
            'isModifier': True,
            'isModifierReason': 'Modifier extensions are expected to modify the meaning or interpretation of the element that contains them',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'N/A',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.hospitalization.modifierExtension',
            'requirements': 'Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](extensibility.html#modifierExtension).',
            'short': 'Extensions that cannot be ignored even if unrecognized',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.hospitalization.preAdmissionIdentifier',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Pre-admission identifier.',
            'id': 'Encounter.hospitalization.preAdmissionIdentifier',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-5',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.id',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.preAdmissionIdentifier',
            'short': 'Pre-admission identifier',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Identifier',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.hospitalization.origin',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The location/organization from which the patient came before admission.',
            'id': 'Encounter.hospitalization.origin',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=ORG].role',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.origin',
            'short': 'The location/organization from which the patient came before admission',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Location',
                  'http://hl7.org/fhir/StructureDefinition/Organization',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.hospitalization.admitSource',
            },
            'binding': <class 'dict'> {
              'description': 'From where the patient was admitted.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'AdmitSource',
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-admit-source',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'From where patient was admitted (physician referral, transfer).',
            'id': 'Encounter.hospitalization.admitSource',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-14',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.admissionReferralSourceCode',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.admitSource',
            'short': 'From where patient was admitted (physician referral, transfer)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.hospitalization.reAdmission',
            },
            'binding': <class 'dict'> {
              'description': 'The reason for re-admission of this hospitalization encounter.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'ReAdmissionType',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://terminology.hl7.org/ValueSet/v2-0092',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Whether this hospitalization is a readmission and why if known.',
            'id': 'Encounter.hospitalization.reAdmission',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-13',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.reAdmission',
            'short': 'The type of hospital re-admission that has occurred (if any). If the value is absent, then this is not identified as a readmission',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.hospitalization.dietPreference',
            },
            'binding': <class 'dict'> {
              'description': 'Medical, cultural or ethical food preferences to help with catering requirements.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'PatientDiet',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-diet',
            },
            'comment': 'For example, a patient may request both a dairy-free and nut-free diet preference (not mutually exclusive).',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Diet preferences reported by the patient.',
            'id': 'Encounter.hospitalization.dietPreference',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-38',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.outboundRelationship[typeCode=COMP].target[classCode=SBADM, moodCode=EVN, code="diet"]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.hospitalization.dietPreference',
            'requirements': "Used to track patient's diet restrictions and/or preference. For a complete description of the nutrition needs of a patient during their stay, one should use the nutritionOrder resource which links to Encounter.",
            'short': 'Diet preferences reported by the patient',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.hospitalization.specialCourtesy',
            },
            'binding': <class 'dict'> {
              'description': 'Special courtesies.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'Courtesies',
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-special-courtesy',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Special courtesies (VIP, board member).',
            'id': 'Encounter.hospitalization.specialCourtesy',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-16',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.specialCourtesiesCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.hospitalization.specialCourtesy',
            'short': 'Special courtesies (VIP, board member)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.hospitalization.specialArrangement',
            },
            'binding': <class 'dict'> {
              'description': 'Special arrangements.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'Arrangements',
                },
              ],
              'strength': 'preferred',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-special-arrangements',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things.',
            'id': 'Encounter.hospitalization.specialArrangement',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-15 / OBR-30 / OBR-43',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.specialArrangementCode',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.hospitalization.specialArrangement',
            'short': 'Wheelchair, translator, stretcher, etc.',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.hospitalization.destination',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Location/organization to which the patient is discharged.',
            'id': 'Encounter.hospitalization.destination',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-37',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=DST]',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.destination',
            'short': 'Location/organization to which the patient is discharged',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Location',
                  'http://hl7.org/fhir/StructureDefinition/Organization',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.hospitalization.dischargeDisposition',
            },
            'binding': <class 'dict'> {
              'description': 'Discharge Disposition.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'DischargeDisp',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-discharge-disposition',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Category or kind of location after discharge.',
            'id': 'Encounter.hospitalization.dischargeDisposition',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-36',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.dischargeDispositionCode',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.hospitalization.dischargeDisposition',
            'short': 'Category or kind of location after discharge',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Encounter.location',
            },
            'comment': 'Virtual encounters can be recorded in the Encounter by specifying a location reference to a location of type "kind" such as "client\'s home" and an encounter.class = "virtual".',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'List of locations where  the patient has been during this encounter.',
            'id': 'Encounter.location',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.participation[typeCode=LOC]',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.location',
            'short': 'List of locations where the patient has been',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'BackboneElement',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Element.id',
            },
            'definition': 'Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.',
            'id': 'Encounter.location.id',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.location.id',
            'representation': <class 'list'> [
              'xmlAttr',
            ],
            'short': 'Unique id for inter-element referencing',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'http://hl7.org/fhirpath/System.String',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type',
                    'valueUrl': 'string',
                  },
                ],
                'fhir_comments': <class 'list'> [
                  ' Note: special primitive values have a FHIRPath system type. e.g. this is compiler magic (j) ',
                ],
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'Element.extension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': 'May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.',
            'id': 'Encounter.location.extension',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'n/a',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.location.extension',
            'short': 'Additional content defined by implementations',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'alias': <class 'list'> [
              'extensions',
              'user content',
              'modifiers',
            ],
            'base': <class 'dict'> {
              'max': '*',
              'min': 0,
              'path': 'BackboneElement.modifierExtension',
            },
            'comment': 'There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
              <class 'dict'> {
                'expression': 'extension.exists() != value.exists()',
                'human': 'Must have either extensions or value[x], not both',
                'key': 'ext-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Extension',
                'xpath': 'exists(f:extension)!=exists(f:*[starts-with(local-name(.), "value")])',
              },
            ],
            'definition': "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.  Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            'id': 'Encounter.location.modifierExtension',
            'isModifier': True,
            'isModifierReason': 'Modifier extensions are expected to modify the meaning or interpretation of the element that contains them',
            'isSummary': True,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': 'N/A',
              },
            ],
            'max': '*',
            'min': 0,
            'path': 'Encounter.location.modifierExtension',
            'requirements': 'Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](extensibility.html#modifierExtension).',
            'short': 'Extensions that cannot be ignored even if unrecognized',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Extension',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 1,
              'path': 'Encounter.location.location',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'The location where the encounter takes place.',
            'id': 'Encounter.location.location',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.location',
              },
              <class 'dict'> {
                'identity': 'w5',
                'map': 'FiveWs.where[x]',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PV1-3 / PV1-6 / PV1-11 / PV1-42 / PV1-43',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.role',
              },
            ],
            'max': '1',
            'min': 1,
            'path': 'Encounter.location.location',
            'short': 'Location the encounter takes place',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Location',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.location.status',
            },
            'binding': <class 'dict'> {
              'description': 'The status of the location.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'EncounterLocationStatus',
                },
              ],
              'strength': 'required',
              'valueSet': 'http://hl7.org/fhir/ValueSet/encounter-location-status|4.0.1',
            },
            'comment': 'When the patient is no longer active at a location, then the period end date is entered, and the status may be changed to completed.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': "The status of the participants' presence at the specified location during the period specified. If the participant is no longer at the location, then the period will have an end date/time.",
            'id': 'Encounter.location.status',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.role.statusCode',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.location.status',
            'short': 'planned | active | reserved | completed',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'code',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.location.physicalType',
            },
            'binding': <class 'dict'> {
              'description': 'Physical form of the location.',
              'extension': <class 'list'> [
                <class 'dict'> {
                  'url': 'http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName',
                  'valueString': 'PhysicalType',
                },
              ],
              'strength': 'example',
              'valueSet': 'http://hl7.org/fhir/ValueSet/location-physical-type',
            },
            'comment': 'This information is de-normalized from the Location resource to support the easier understanding of the encounter resource and processing in messaging or query.  There may be many levels in the hierachy, and this may only pic specific levels that are required for a specific usage scenario.',
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'This will be used to specify the required levels (bed/ward/room/etc.) desired to be recorded to simplify either messaging or query.',
            'id': 'Encounter.location.physicalType',
            'isModifier': False,
            'isSummary': False,
            'max': '1',
            'min': 0,
            'path': 'Encounter.location.physicalType',
            'short': 'The physical type of the location (usually the level in the location hierachy - bed room ward etc.)',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'CodeableConcept',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.location.period',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Time period during which the patient was present at the location.',
            'id': 'Encounter.location.period',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'rim',
                'map': '.time',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.location.period',
            'short': 'Time period during which the patient was present at the location',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Period',
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.serviceProvider',
            },
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': "The organization that is primarily responsible for this Encounter's services. This MAY be the same as the organization on the Patient record, however it could be different, such as if the actor performing the services was from an external organization (which may be billed seperately) for an external consultation.  Refer to the example bundle showing an abbreviated set of Encounters for a colonoscopy.",
            'id': 'Encounter.serviceProvider',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.performer.actor',
              },
              <class 'dict'> {
                'identity': 'v2',
                'map': 'PL.6  & PL.1',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.particiaption[typeCode=PFM].role',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.serviceProvider',
            'short': 'The organization (facility) responsible for this encounter',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Organization',
                ],
              },
            ],
          },
          <class 'dict'> {
            'base': <class 'dict'> {
              'max': '1',
              'min': 0,
              'path': 'Encounter.partOf',
            },
            'comment': "This is also used for associating a child's encounter back to the mother's encounter.  Refer to the Notes section in the Patient resource for further details.",
            'constraint': <class 'list'> [
              <class 'dict'> {
                'expression': 'hasValue() or (children().count() > id.count())',
                'human': 'All FHIR elements must have a @value or children',
                'key': 'ele-1',
                'severity': 'error',
                'source': 'http://hl7.org/fhir/StructureDefinition/Element',
                'xpath': '@value|f:*|h:div',
              },
            ],
            'definition': 'Another Encounter of which this encounter is a part of (administratively or in time).',
            'id': 'Encounter.partOf',
            'isModifier': False,
            'isSummary': False,
            'mapping': <class 'list'> [
              <class 'dict'> {
                'identity': 'workflow',
                'map': 'Event.partOf',
              },
              <class 'dict'> {
                'identity': 'rim',
                'map': '.inboundRelationship[typeCode=COMP].source[classCode=COMP, moodCode=EVN]',
              },
            ],
            'max': '1',
            'min': 0,
            'path': 'Encounter.partOf',
            'short': 'Another Encounter this encounter is part of',
            'type': <class 'list'> [
              <class 'dict'> {
                'code': 'Reference',
                'extension': <class 'list'> [
                  <class 'dict'> {
                    'url': 'http://hl7.org/fhir/StructureDefinition/structuredefinition-hierarchy',
                    'valueBoolean': True,
                  },
                ],
                'targetProfile': <class 'list'> [
                  'http://hl7.org/fhir/StructureDefinition/Encounter',
                ],
              },
            ],
          },
        ],
      },
      'status': 'draft',
      'type': 'Encounter',
      'url': 'http://hl7.org/fhir/StructureDefinition/Encounter',
      'version': '4.0.1',
    },
    definition_id='Encounter',
    filters=<class 'list'> [
      <class 'SqlFilter'> {
        relation='=',
        sql_column=<class 'SqlColumn'> {
          cleaning_script=None,
          column='subject_id',
          concept_map=None,
          joins=<class 'list'> [
          ],
          owner='public',
          table='admissions',
        },
        value='10011',
      },
    ],
    is_static=False,
    label='',
    logical_reference='5a9ba1c2-dfab-420c-96ff-b6fc6d63421b',
    primary_key_column=<class 'SqlColumn'> {
      cleaning_script=None,
      column='row_id',
      concept_map=None,
      joins=<class 'list'> [
      ],
      owner='public',
      table='admissions',
    },
    reference_paths=<class 'list'> [
      <class 'list'> [
        'subject',
      ],
      <class 'list'> [
        'location',
        'location',
      ],
      <class 'list'> [
        'diagnosis',
        'condition',
      ],
      <class 'list'> [
        'serviceProvider',
      ],
    ],
    resource_id='cktjv96ex0050q7vzrea47mnt',
    source_credentials=<class 'dict'> {
      'database': 'test',
      'host': 'mimic',
      'login': 'test',
      'model': 'POSTGRES',
      'password': 'test',
      'port': 5432,
    },
    source_id='cktjv96c80002q7vzaq12cp3n',
  }
---
